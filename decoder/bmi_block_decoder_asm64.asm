; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	$T3378
PUBLIC	$T3379
PUBLIC	$T3380
PUBLIC	$T3381
PUBLIC	$T3382
PUBLIC	$T3383
PUBLIC	$T3384
PUBLIC	$T3385
PUBLIC	$T3386
PUBLIC	$T3387
PUBLIC	$T3388
PUBLIC	$T3389
PUBLIC	$T3390
PUBLIC	$T3391
PUBLIC	$T3392
PUBLIC	$T3393
PUBLIC	$T3394
PUBLIC	$T3395
PUBLIC	$T3396
PUBLIC	$T3397
PUBLIC	$T3398
PUBLIC	$T3399
PUBLIC	$T3400
PUBLIC	$T3401
PUBLIC	$T3402
PUBLIC	$T3403
PUBLIC	$T3404
PUBLIC	$T3405
PUBLIC	$T3406
PUBLIC	$T3407
PUBLIC	$T3408
PUBLIC	$T3409
PUBLIC	bmi_t1_decode_pass0_asm64
pdata	SEGMENT
$pdata$bmi_t1_decode_pass0_asm64 DD imagerel $LN208
	DD	imagerel $LN208+8167
	DD	imagerel $unwind$bmi_t1_decode_pass0_asm64
pdata	ENDS
xdata	SEGMENT
$unwind$bmi_t1_decode_pass0_asm64 DD 041d01H
	DD	04d011dH
	DD	060157016H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
width_by3$ = 0
reg_A$ = 4
reg_t$ = 8
width_by2$ = 12
cword$ = 16
reg_T$ = 20
reg_buf_next$ = 24
val$ = 32
reg_C$ = 36
state_ref$ = 40
sym$ = 48
reg_S$ = 52
c$ = 56
one_and_half$ = 60
_p$2607 = 64
_p$2637 = 68
_p$2666 = 72
_p$2696 = 76
_p$2725 = 80
_p$2755 = 84
_p$2784 = 88
_p$2814 = 92
$T3378 = 96
$T3379 = 112
$T3380 = 128
$T3381 = 144
$T3382 = 160
$T3383 = 176
$T3384 = 192
$T3385 = 208
$T3386 = 224
$T3387 = 240
$T3388 = 256
$T3389 = 272
$T3390 = 288
$T3391 = 304
$T3392 = 320
$T3393 = 336
$T3394 = 352
$T3395 = 368
$T3396 = 384
$T3397 = 400
$T3398 = 416
$T3399 = 432
$T3400 = 448
$T3401 = 464
$T3402 = 480
$T3403 = 496
$T3404 = 512
$T3405 = 528
$T3406 = 544
$T3407 = 560
$T3408 = 576
$T3409 = 592
coder$ = 640
states$ = 648
p$ = 656
lutContext$ = 664
sp$ = 672
contextWord$ = 680
width$ = 688
num_stripes$ = 696
lut_ctx_sign_asm64$ = 704
bmi_t1_decode_pass0_asm64 PROC
; File c:\jason\bmi_decoder\decoder\decoder\codec\src\bmi_block_decoder_asm64.cpp
; Line 117
$LN208:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 616				; 00000268H
; Line 119
	mov	rax, QWORD PTR coder$[rsp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR reg_A$[rsp], eax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR reg_C$[rsp], eax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR reg_t$[rsp], eax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax+12]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax+16]
	mov	DWORD PTR reg_S$[rsp], eax
; Line 125
	mov	eax, DWORD PTR p$[rsp]
	mov	edx, 1
	movzx	ecx, al
	shl	edx, cl
	mov	ecx, DWORD PTR p$[rsp]
	mov	eax, 1
	shl	eax, cl
	mov	ecx, eax
	sar	ecx, 1
	mov	eax, edx
	add	eax, ecx
	mov	DWORD PTR one_and_half$[rsp], eax
; Line 126
	mov	ecx, DWORD PTR width$[rsp]
	mov	eax, DWORD PTR width$[rsp]
	add	eax, ecx
	mov	DWORD PTR width_by2$[rsp], eax
	mov	ecx, DWORD PTR width$[rsp]
	mov	eax, DWORD PTR width_by2$[rsp]
	add	eax, ecx
	mov	DWORD PTR width_by3$[rsp], eax
$LN205@bmi_t1_dec:
; Line 133
	mov	eax, DWORD PTR width$[rsp]
	mov	DWORD PTR c$[rsp], eax
$LN202@bmi_t1_dec:
; Line 136
	mov	rax, QWORD PTR contextWord$[rsp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN199@bmi_t1_dec
$LN198@bmi_t1_dec:
; Line 139
	mov	rax, QWORD PTR contextWord$[rsp]
	add	rax, 12
	mov	QWORD PTR contextWord$[rsp], rax
	mov	rax, QWORD PTR contextWord$[rsp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN197@bmi_t1_dec
; Line 141
	mov	eax, DWORD PTR c$[rsp]
	sub	eax, 3
	mov	DWORD PTR c$[rsp], eax
; Line 142
	mov	rax, QWORD PTR sp$[rsp]
	add	rax, 12
	mov	QWORD PTR sp$[rsp], rax
; Line 143
	jmp	SHORT $LN198@bmi_t1_dec
$LN197@bmi_t1_dec:
; Line 144
	mov	rax, QWORD PTR contextWord$[rsp]
	sub	rax, 8
	mov	QWORD PTR contextWord$[rsp], rax
; Line 145
	mov	eax, DWORD PTR c$[rsp]
	sub	eax, 1
	mov	DWORD PTR c$[rsp], eax
; Line 146
	mov	rax, QWORD PTR sp$[rsp]
	add	rax, 4
	mov	QWORD PTR sp$[rsp], rax
; Line 147
	jmp	$LN201@bmi_t1_dec
$LN199@bmi_t1_dec:
; Line 149
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR cword$[rsp], eax
; Line 154
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 495				; 000001efH
	test	eax, eax
	je	$LN196@bmi_t1_dec
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 524304				; 00080010H
	test	eax, eax
	jne	$LN196@bmi_t1_dec
; Line 157
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 495				; 000001efH
	movsxd	rcx, eax
	mov	rax, QWORD PTR lutContext$[rsp]
	movzx	ecx, BYTE PTR [rax+rcx]
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	add	rax, rcx
	mov	QWORD PTR state_ref$[rsp], rax
; Line 158
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$2607[rsp], eax
	mov	ecx, DWORD PTR _p$2607[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$2607[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN195@bmi_t1_dec
	mov	eax, DWORD PTR _p$2607[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN194@bmi_t1_dec
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3409[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3409[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN193@bmi_t1_dec
$LN194@bmi_t1_dec:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3408[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3408[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN193@bmi_t1_dec:
	mov	eax, DWORD PTR _p$2607[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN192@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN189@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN188@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN187@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN186@bmi_t1_dec
$LN187@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN186@bmi_t1_dec:
	jmp	SHORT $LN185@bmi_t1_dec
$LN188@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN185@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN189@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN192@bmi_t1_dec
	jmp	$LN184@bmi_t1_dec
$LN195@bmi_t1_dec:
	mov	ecx, DWORD PTR _p$2607[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN183@bmi_t1_dec
	mov	eax, DWORD PTR _p$2607[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN182@bmi_t1_dec
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3407[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3407[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN181@bmi_t1_dec
$LN182@bmi_t1_dec:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3406[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3406[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN181@bmi_t1_dec:
$LN180@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN177@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN176@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN175@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN174@bmi_t1_dec
$LN175@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN174@bmi_t1_dec:
	jmp	SHORT $LN173@bmi_t1_dec
$LN176@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN173@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN177@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN180@bmi_t1_dec
$LN183@bmi_t1_dec:
$LN184@bmi_t1_dec:
; Line 159
	cmp	DWORD PTR sym$[rsp], 0
	jne	SHORT $LN172@bmi_t1_dec
; Line 161
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, 2097152				; 00200000H
	mov	DWORD PTR cword$[rsp], eax
; Line 163
	jmp	$LN171@bmi_t1_dec
$LN172@bmi_t1_dec:
; Line 172
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 4194432				; 00400080H
	mov	DWORD PTR sym$[rsp], eax
; Line 173
	mov	ecx, DWORD PTR cword$[rsp]
	and	ecx, 2
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 174
	mov	ecx, DWORD PTR cword$[rsp]
	and	ecx, 262144				; 00040000H
	sar	ecx, 2
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 176
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	and	ecx, 524304				; 00080010H
	sar	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 177
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	and	ecx, 524304				; 00080010H
	shl	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 178
	mov	ecx, DWORD PTR sym$[rsp]
	sar	ecx, 14
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 179
	mov	eax, DWORD PTR sym$[rsp]
	sar	eax, 1
	mov	DWORD PTR sym$[rsp], eax
; Line 180
	mov	eax, DWORD PTR sym$[rsp]
	and	eax, 255				; 000000ffH
	movsxd	rcx, eax
	mov	rax, QWORD PTR lut_ctx_sign_asm64$[rsp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	DWORD PTR val$[rsp], eax
; Line 181
	mov	eax, DWORD PTR val$[rsp]
	sar	eax, 1
	movsxd	rcx, eax
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	lea	rax, QWORD PTR [rax+rcx+160]
	mov	QWORD PTR state_ref$[rsp], rax
; Line 182
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$2637[rsp], eax
	mov	ecx, DWORD PTR _p$2637[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$2637[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN170@bmi_t1_dec
	mov	eax, DWORD PTR _p$2637[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN169@bmi_t1_dec
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3405[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3405[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN168@bmi_t1_dec
$LN169@bmi_t1_dec:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3404[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3404[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN168@bmi_t1_dec:
	mov	eax, DWORD PTR _p$2637[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN167@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN164@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN163@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN162@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN161@bmi_t1_dec
$LN162@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN161@bmi_t1_dec:
	jmp	SHORT $LN160@bmi_t1_dec
$LN163@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN160@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN164@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN167@bmi_t1_dec
	jmp	$LN159@bmi_t1_dec
$LN170@bmi_t1_dec:
	mov	ecx, DWORD PTR _p$2637[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN158@bmi_t1_dec
	mov	eax, DWORD PTR _p$2637[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN157@bmi_t1_dec
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3403[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3403[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN156@bmi_t1_dec
$LN157@bmi_t1_dec:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3402[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3402[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN156@bmi_t1_dec:
$LN155@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN152@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN151@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN150@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN149@bmi_t1_dec
$LN150@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN149@bmi_t1_dec:
	jmp	SHORT $LN148@bmi_t1_dec
$LN151@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN148@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN152@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN155@bmi_t1_dec
$LN158@bmi_t1_dec:
$LN159@bmi_t1_dec:
; Line 183
	mov	ecx, DWORD PTR val$[rsp]
	and	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 189
	mov	eax, DWORD PTR width$[rsp]
	neg	eax
	sub	eax, 4
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	edx, DWORD PTR [rax+rcx*4]
	or	edx, 131072				; 00020000H
	mov	eax, DWORD PTR width$[rsp]
	neg	eax
	sub	eax, 4
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
; Line 190
	mov	eax, DWORD PTR width$[rsp]
	neg	eax
	sub	eax, 3
	movsxd	rdx, eax
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 31
	or	ecx, 65536				; 00010000H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	edx, DWORD PTR [rax+rdx*4]
	or	edx, ecx
	mov	eax, DWORD PTR width$[rsp]
	neg	eax
	sub	eax, 3
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
; Line 191
	mov	eax, DWORD PTR width$[rsp]
	neg	eax
	sub	eax, 2
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	edx, DWORD PTR [rax+rcx*4]
	or	edx, 32768				; 00008000H
	mov	eax, DWORD PTR width$[rsp]
	neg	eax
	sub	eax, 2
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
; Line 192
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	or	ecx, 32					; 00000020H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax-4], ecx
; Line 193
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	or	ecx, 8
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+4], ecx
; Line 195
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 19
	or	ecx, 2097168				; 00200010H
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, ecx
	mov	DWORD PTR cword$[rsp], eax
; Line 196
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 31
	add	ecx, DWORD PTR one_and_half$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	mov	DWORD PTR [rax], ecx
$LN171@bmi_t1_dec:
$LN196@bmi_t1_dec:
; Line 200
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 3960				; 00000f78H
	test	eax, eax
	je	$LN147@bmi_t1_dec
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 4194432				; 00400080H
	test	eax, eax
	jne	$LN147@bmi_t1_dec
; Line 203
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 3960				; 00000f78H
	sar	eax, 3
	movsxd	rcx, eax
	mov	rax, QWORD PTR lutContext$[rsp]
	movzx	ecx, BYTE PTR [rax+rcx]
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	add	rax, rcx
	mov	QWORD PTR state_ref$[rsp], rax
; Line 204
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$2666[rsp], eax
	mov	ecx, DWORD PTR _p$2666[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$2666[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN146@bmi_t1_dec
	mov	eax, DWORD PTR _p$2666[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN145@bmi_t1_dec
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3401[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3401[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN144@bmi_t1_dec
$LN145@bmi_t1_dec:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3400[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3400[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN144@bmi_t1_dec:
	mov	eax, DWORD PTR _p$2666[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN143@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN140@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN139@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN138@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN137@bmi_t1_dec
$LN138@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN137@bmi_t1_dec:
	jmp	SHORT $LN136@bmi_t1_dec
$LN139@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN136@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN140@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN143@bmi_t1_dec
	jmp	$LN135@bmi_t1_dec
$LN146@bmi_t1_dec:
	mov	ecx, DWORD PTR _p$2666[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN134@bmi_t1_dec
	mov	eax, DWORD PTR _p$2666[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN133@bmi_t1_dec
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3399[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3399[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN132@bmi_t1_dec
$LN133@bmi_t1_dec:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3398[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3398[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN132@bmi_t1_dec:
$LN131@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN128@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN127@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN126@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN125@bmi_t1_dec
$LN126@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN125@bmi_t1_dec:
	jmp	SHORT $LN124@bmi_t1_dec
$LN127@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN124@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN128@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN131@bmi_t1_dec
$LN134@bmi_t1_dec:
$LN135@bmi_t1_dec:
; Line 205
	cmp	DWORD PTR sym$[rsp], 0
	jne	SHORT $LN123@bmi_t1_dec
; Line 207
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, 16777216				; 01000000H
	mov	DWORD PTR cword$[rsp], eax
; Line 209
	jmp	$LN122@bmi_t1_dec
$LN123@bmi_t1_dec:
; Line 214
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 34079760				; 02080410H
	mov	DWORD PTR sym$[rsp], eax
; Line 216
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	and	ecx, 4194432				; 00400080H
	sar	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 217
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	and	ecx, 4194432				; 00400080H
	shl	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 218
	mov	ecx, DWORD PTR sym$[rsp]
	sar	ecx, 14
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 219
	mov	eax, DWORD PTR sym$[rsp]
	sar	eax, 4
	mov	DWORD PTR sym$[rsp], eax
; Line 220
	mov	eax, DWORD PTR sym$[rsp]
	and	eax, 255				; 000000ffH
	movsxd	rcx, eax
	mov	rax, QWORD PTR lut_ctx_sign_asm64$[rsp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	DWORD PTR val$[rsp], eax
; Line 221
	mov	eax, DWORD PTR val$[rsp]
	sar	eax, 1
	movsxd	rcx, eax
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	lea	rax, QWORD PTR [rax+rcx+160]
	mov	QWORD PTR state_ref$[rsp], rax
; Line 222
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$2696[rsp], eax
	mov	ecx, DWORD PTR _p$2696[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$2696[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN121@bmi_t1_dec
	mov	eax, DWORD PTR _p$2696[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN120@bmi_t1_dec
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3397[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3397[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN119@bmi_t1_dec
$LN120@bmi_t1_dec:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3396[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3396[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN119@bmi_t1_dec:
	mov	eax, DWORD PTR _p$2696[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN118@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN115@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN114@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN113@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN112@bmi_t1_dec
$LN113@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN112@bmi_t1_dec:
	jmp	SHORT $LN111@bmi_t1_dec
$LN114@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN111@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN115@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN118@bmi_t1_dec
	jmp	$LN110@bmi_t1_dec
$LN121@bmi_t1_dec:
	mov	ecx, DWORD PTR _p$2696[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN109@bmi_t1_dec
	mov	eax, DWORD PTR _p$2696[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN108@bmi_t1_dec
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3395[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3395[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN107@bmi_t1_dec
$LN108@bmi_t1_dec:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3394[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3394[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN107@bmi_t1_dec:
$LN106@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN103@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN102@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN101@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN100@bmi_t1_dec
$LN101@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN100@bmi_t1_dec:
	jmp	SHORT $LN99@bmi_t1_dec
$LN102@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN99@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN103@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN106@bmi_t1_dec
$LN109@bmi_t1_dec:
$LN110@bmi_t1_dec:
; Line 223
	mov	ecx, DWORD PTR val$[rsp]
	and	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 226
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	or	ecx, 256				; 00000100H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax-4], ecx
; Line 227
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	or	ecx, 64					; 00000040H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+4], ecx
; Line 229
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 22
	or	ecx, 16777344				; 01000080H
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, ecx
	mov	DWORD PTR cword$[rsp], eax
; Line 230
	mov	edx, DWORD PTR sym$[rsp]
	shl	edx, 31
	add	edx, DWORD PTR one_and_half$[rsp]
	movsxd	rcx, DWORD PTR width$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
$LN122@bmi_t1_dec:
$LN147@bmi_t1_dec:
; Line 234
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 31680				; 00007bc0H
	test	eax, eax
	je	$LN98@bmi_t1_dec
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 33555456				; 02000400H
	test	eax, eax
	jne	$LN98@bmi_t1_dec
; Line 237
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 31680				; 00007bc0H
	sar	eax, 6
	movsxd	rcx, eax
	mov	rax, QWORD PTR lutContext$[rsp]
	movzx	ecx, BYTE PTR [rax+rcx]
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	add	rax, rcx
	mov	QWORD PTR state_ref$[rsp], rax
; Line 238
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$2725[rsp], eax
	mov	ecx, DWORD PTR _p$2725[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$2725[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN97@bmi_t1_dec
	mov	eax, DWORD PTR _p$2725[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN96@bmi_t1_dec
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3393[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3393[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN95@bmi_t1_dec
$LN96@bmi_t1_dec:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3392[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3392[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN95@bmi_t1_dec:
	mov	eax, DWORD PTR _p$2725[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN94@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN91@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN90@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN89@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN88@bmi_t1_dec
$LN89@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN88@bmi_t1_dec:
	jmp	SHORT $LN87@bmi_t1_dec
$LN90@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN87@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN91@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN94@bmi_t1_dec
	jmp	$LN86@bmi_t1_dec
$LN97@bmi_t1_dec:
	mov	ecx, DWORD PTR _p$2725[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN85@bmi_t1_dec
	mov	eax, DWORD PTR _p$2725[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN84@bmi_t1_dec
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3391[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3391[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN83@bmi_t1_dec
$LN84@bmi_t1_dec:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3390[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3390[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN83@bmi_t1_dec:
$LN82@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN79@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN78@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN77@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN76@bmi_t1_dec
$LN77@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN76@bmi_t1_dec:
	jmp	SHORT $LN75@bmi_t1_dec
$LN78@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN75@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN79@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN82@bmi_t1_dec
$LN85@bmi_t1_dec:
$LN86@bmi_t1_dec:
; Line 239
	cmp	DWORD PTR sym$[rsp], 0
	jne	SHORT $LN74@bmi_t1_dec
; Line 241
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, 134217728				; 08000000H
	mov	DWORD PTR cword$[rsp], eax
; Line 243
	jmp	$LN73@bmi_t1_dec
$LN74@bmi_t1_dec:
; Line 248
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 272638080				; 10402080H
	mov	DWORD PTR sym$[rsp], eax
; Line 250
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	and	ecx, 33555456				; 02000400H
	sar	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 251
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	and	ecx, 33555456				; 02000400H
	shl	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 252
	mov	ecx, DWORD PTR sym$[rsp]
	sar	ecx, 14
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 253
	mov	eax, DWORD PTR sym$[rsp]
	sar	eax, 7
	mov	DWORD PTR sym$[rsp], eax
; Line 254
	mov	eax, DWORD PTR sym$[rsp]
	and	eax, 255				; 000000ffH
	movsxd	rcx, eax
	mov	rax, QWORD PTR lut_ctx_sign_asm64$[rsp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	DWORD PTR val$[rsp], eax
; Line 255
	mov	eax, DWORD PTR val$[rsp]
	sar	eax, 1
	movsxd	rcx, eax
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	lea	rax, QWORD PTR [rax+rcx+160]
	mov	QWORD PTR state_ref$[rsp], rax
; Line 256
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$2755[rsp], eax
	mov	ecx, DWORD PTR _p$2755[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$2755[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN72@bmi_t1_dec
	mov	eax, DWORD PTR _p$2755[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN71@bmi_t1_dec
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3389[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3389[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN70@bmi_t1_dec
$LN71@bmi_t1_dec:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3388[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3388[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN70@bmi_t1_dec:
	mov	eax, DWORD PTR _p$2755[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN69@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN66@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN65@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN64@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN63@bmi_t1_dec
$LN64@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN63@bmi_t1_dec:
	jmp	SHORT $LN62@bmi_t1_dec
$LN65@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN62@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN66@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN69@bmi_t1_dec
	jmp	$LN61@bmi_t1_dec
$LN72@bmi_t1_dec:
	mov	ecx, DWORD PTR _p$2755[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN60@bmi_t1_dec
	mov	eax, DWORD PTR _p$2755[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN59@bmi_t1_dec
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3387[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3387[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN58@bmi_t1_dec
$LN59@bmi_t1_dec:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3386[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3386[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN58@bmi_t1_dec:
$LN57@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN54@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN53@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN52@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN51@bmi_t1_dec
$LN52@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN51@bmi_t1_dec:
	jmp	SHORT $LN50@bmi_t1_dec
$LN53@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN50@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN54@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN57@bmi_t1_dec
$LN60@bmi_t1_dec:
$LN61@bmi_t1_dec:
; Line 257
	mov	ecx, DWORD PTR val$[rsp]
	and	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 260
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	or	ecx, 2048				; 00000800H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax-4], ecx
; Line 261
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	or	ecx, 512				; 00000200H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+4], ecx
; Line 263
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 25
	or	ecx, 134218752				; 08000400H
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, ecx
	mov	DWORD PTR cword$[rsp], eax
; Line 264
	mov	edx, DWORD PTR sym$[rsp]
	shl	edx, 31
	add	edx, DWORD PTR one_and_half$[rsp]
	movsxd	rcx, DWORD PTR width_by2$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
$LN73@bmi_t1_dec:
$LN98@bmi_t1_dec:
; Line 268
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 253440				; 0003de00H
	test	eax, eax
	je	$LN49@bmi_t1_dec
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 268443648				; 10002000H
	test	eax, eax
	jne	$LN49@bmi_t1_dec
; Line 271
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 253440				; 0003de00H
	sar	eax, 9
	movsxd	rcx, eax
	mov	rax, QWORD PTR lutContext$[rsp]
	movzx	ecx, BYTE PTR [rax+rcx]
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	add	rax, rcx
	mov	QWORD PTR state_ref$[rsp], rax
; Line 272
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$2784[rsp], eax
	mov	ecx, DWORD PTR _p$2784[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$2784[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN48@bmi_t1_dec
	mov	eax, DWORD PTR _p$2784[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN47@bmi_t1_dec
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3385[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3385[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN46@bmi_t1_dec
$LN47@bmi_t1_dec:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3384[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3384[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN46@bmi_t1_dec:
	mov	eax, DWORD PTR _p$2784[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN45@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN42@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN41@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN40@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN39@bmi_t1_dec
$LN40@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN39@bmi_t1_dec:
	jmp	SHORT $LN38@bmi_t1_dec
$LN41@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN38@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN42@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN45@bmi_t1_dec
	jmp	$LN37@bmi_t1_dec
$LN48@bmi_t1_dec:
	mov	ecx, DWORD PTR _p$2784[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN36@bmi_t1_dec
	mov	eax, DWORD PTR _p$2784[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN35@bmi_t1_dec
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3383[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3383[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN34@bmi_t1_dec
$LN35@bmi_t1_dec:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3382[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3382[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN34@bmi_t1_dec:
$LN33@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN30@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN29@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN28@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN27@bmi_t1_dec
$LN28@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN27@bmi_t1_dec:
	jmp	SHORT $LN26@bmi_t1_dec
$LN29@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN26@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN30@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN33@bmi_t1_dec
$LN36@bmi_t1_dec:
$LN37@bmi_t1_dec:
; Line 273
	cmp	DWORD PTR sym$[rsp], 0
	jne	SHORT $LN25@bmi_t1_dec
; Line 275
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, 1073741824				; 40000000H
	mov	DWORD PTR cword$[rsp], eax
; Line 277
	jmp	$LN24@bmi_t1_dec
$LN25@bmi_t1_dec:
; Line 283
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, -2113862656			; ffffffff82010400H
	mov	DWORD PTR sym$[rsp], eax
; Line 285
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	and	ecx, 268443648				; 10002000H
	sar	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 286
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	and	ecx, 268443648				; 10002000H
	shl	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 287
	mov	ecx, DWORD PTR sym$[rsp]
	sar	ecx, 14
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 288
	mov	eax, DWORD PTR sym$[rsp]
	sar	eax, 10
	mov	DWORD PTR sym$[rsp], eax
; Line 291
	mov	eax, DWORD PTR sym$[rsp]
	and	eax, 255				; 000000ffH
	movsxd	rcx, eax
	mov	rax, QWORD PTR lut_ctx_sign_asm64$[rsp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	DWORD PTR val$[rsp], eax
; Line 292
	mov	eax, DWORD PTR val$[rsp]
	sar	eax, 1
	movsxd	rcx, eax
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	lea	rax, QWORD PTR [rax+rcx+160]
	mov	QWORD PTR state_ref$[rsp], rax
; Line 293
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$2814[rsp], eax
	mov	ecx, DWORD PTR _p$2814[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$2814[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN23@bmi_t1_dec
	mov	eax, DWORD PTR _p$2814[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN22@bmi_t1_dec
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3381[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3381[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN21@bmi_t1_dec
$LN22@bmi_t1_dec:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3380[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3380[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN21@bmi_t1_dec:
	mov	eax, DWORD PTR _p$2814[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN20@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN17@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN16@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN15@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN14@bmi_t1_dec
$LN15@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN14@bmi_t1_dec:
	jmp	SHORT $LN13@bmi_t1_dec
$LN16@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN13@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN17@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN20@bmi_t1_dec
	jmp	$LN12@bmi_t1_dec
$LN23@bmi_t1_dec:
	mov	ecx, DWORD PTR _p$2814[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN11@bmi_t1_dec
	mov	eax, DWORD PTR _p$2814[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN10@bmi_t1_dec
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3379[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3379[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN9@bmi_t1_dec
$LN10@bmi_t1_dec:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3378[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3378[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN9@bmi_t1_dec:
$LN8@bmi_t1_dec:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN5@bmi_t1_dec
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN4@bmi_t1_dec
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN3@bmi_t1_dec
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN2@bmi_t1_dec
$LN3@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN2@bmi_t1_dec:
	jmp	SHORT $LN1@bmi_t1_dec
$LN4@bmi_t1_dec:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN1@bmi_t1_dec:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN5@bmi_t1_dec:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN8@bmi_t1_dec
$LN11@bmi_t1_dec:
$LN12@bmi_t1_dec:
; Line 294
	mov	ecx, DWORD PTR val$[rsp]
	and	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 297
	mov	eax, DWORD PTR width$[rsp]
	add	eax, 2
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	edx, DWORD PTR [rax+rcx*4]
	or	edx, 4
	mov	eax, DWORD PTR width$[rsp]
	add	eax, 2
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
; Line 298
	mov	eax, DWORD PTR width$[rsp]
	add	eax, 3
	movsxd	rdx, eax
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 18
	or	ecx, 2
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	edx, DWORD PTR [rax+rdx*4]
	or	edx, ecx
	mov	eax, DWORD PTR width$[rsp]
	add	eax, 3
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
; Line 299
	mov	eax, DWORD PTR width$[rsp]
	add	eax, 4
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	edx, DWORD PTR [rax+rcx*4]
	or	edx, 1
	mov	eax, DWORD PTR width$[rsp]
	add	eax, 4
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
; Line 301
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	or	ecx, 16384				; 00004000H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax-4], ecx
; Line 302
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	or	ecx, 4096				; 00001000H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+4], ecx
; Line 303
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 28
	or	ecx, 1073750016				; 40002000H
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, ecx
	mov	DWORD PTR cword$[rsp], eax
; Line 304
	mov	edx, DWORD PTR sym$[rsp]
	shl	edx, 31
	add	edx, DWORD PTR one_and_half$[rsp]
	movsxd	rcx, DWORD PTR width_by3$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
$LN24@bmi_t1_dec:
$LN49@bmi_t1_dec:
; Line 309
	mov	rcx, QWORD PTR contextWord$[rsp]
	mov	eax, DWORD PTR cword$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 310
	mov	eax, DWORD PTR c$[rsp]
	sub	eax, 1
	mov	DWORD PTR c$[rsp], eax
; Line 311
	mov	rax, QWORD PTR sp$[rsp]
	add	rax, 4
	mov	QWORD PTR sp$[rsp], rax
; Line 312
	mov	rax, QWORD PTR contextWord$[rsp]
	add	rax, 4
	mov	QWORD PTR contextWord$[rsp], rax
$LN201@bmi_t1_dec:
; Line 313
	cmp	DWORD PTR c$[rsp], 0
	jg	$LN202@bmi_t1_dec
; Line 314
	mov	eax, DWORD PTR num_stripes$[rsp]
	sub	eax, 1
	mov	DWORD PTR num_stripes$[rsp], eax
; Line 315
	mov	rax, QWORD PTR contextWord$[rsp]
	add	rax, 12
	mov	QWORD PTR contextWord$[rsp], rax
; Line 316
	movsxd	rcx, DWORD PTR width_by3$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR sp$[rsp], rax
; Line 317
	cmp	DWORD PTR num_stripes$[rsp], 0
	jg	$LN205@bmi_t1_dec
; Line 319
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	mov	DWORD PTR [rcx], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	mov	DWORD PTR [rcx+4], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_t$[rsp]
	mov	DWORD PTR [rcx+8], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_T$[rsp]
	mov	DWORD PTR [rcx+12], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_S$[rsp]
	mov	DWORD PTR [rcx+16], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	mov	QWORD PTR [rcx+24], rax
; Line 320
	add	rsp, 616				; 00000268H
	pop	rdi
	pop	rsi
	ret	0
bmi_t1_decode_pass0_asm64 ENDP
_TEXT	ENDS
PUBLIC	$T3414
PUBLIC	$T3415
PUBLIC	$T3416
PUBLIC	$T3417
PUBLIC	$T3418
PUBLIC	$T3419
PUBLIC	$T3420
PUBLIC	$T3421
PUBLIC	$T3422
PUBLIC	$T3423
PUBLIC	$T3424
PUBLIC	$T3425
PUBLIC	$T3426
PUBLIC	$T3427
PUBLIC	$T3428
PUBLIC	$T3429
PUBLIC	bmi_t1_decode_pass1_asm64
pdata	SEGMENT
$pdata$bmi_t1_decode_pass1_asm64 DD imagerel $LN121
	DD	imagerel $LN121+4201
	DD	imagerel $unwind$bmi_t1_decode_pass1_asm64
pdata	ENDS
xdata	SEGMENT
$unwind$bmi_t1_decode_pass1_asm64 DD 041d01H
	DD	02b011dH
	DD	060157016H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
width_by3$ = 0
reg_A$ = 4
reg_t$ = 8
width_by2$ = 12
cword$ = 16
reg_T$ = 20
reg_buf_next$ = 24
val$ = 32
reg_C$ = 36
state_ref$ = 40
sym$ = 48
reg_S$ = 52
c$ = 56
half_lsb$ = 60
_p$2881 = 64
_p$2914 = 68
_p$2947 = 72
_p$2980 = 76
$T3414 = 80
$T3415 = 96
$T3416 = 112
$T3417 = 128
$T3418 = 144
$T3419 = 160
$T3420 = 176
$T3421 = 192
$T3422 = 208
$T3423 = 224
$T3424 = 240
$T3425 = 256
$T3426 = 272
$T3427 = 288
$T3428 = 304
$T3429 = 320
coder$ = 368
states$ = 376
p$ = 384
sp$ = 392
contextWord$ = 400
width$ = 408
num_stripes$ = 416
bmi_t1_decode_pass1_asm64 PROC
; Line 326
$LN121:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 344				; 00000158H
; Line 329
	mov	rax, QWORD PTR coder$[rsp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR reg_A$[rsp], eax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR reg_C$[rsp], eax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR reg_t$[rsp], eax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax+12]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax+16]
	mov	DWORD PTR reg_S$[rsp], eax
; Line 335
	mov	ecx, DWORD PTR p$[rsp]
	mov	eax, 1
	shl	eax, cl
	sar	eax, 1
	mov	DWORD PTR half_lsb$[rsp], eax
; Line 336
	mov	ecx, DWORD PTR width$[rsp]
	mov	eax, DWORD PTR width$[rsp]
	add	eax, ecx
	mov	DWORD PTR width_by2$[rsp], eax
	mov	ecx, DWORD PTR width$[rsp]
	mov	eax, DWORD PTR width_by2$[rsp]
	add	eax, ecx
	mov	DWORD PTR width_by3$[rsp], eax
; Line 338
	mov	rax, QWORD PTR states$[rsp]
	add	rax, 240				; 000000f0H
	mov	QWORD PTR states$[rsp], rax
$LN118@bmi_t1_dec@2:
; Line 343
	mov	eax, DWORD PTR width$[rsp]
	mov	DWORD PTR c$[rsp], eax
$LN115@bmi_t1_dec@2:
; Line 347
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 613416960				; 24900000H
	test	eax, eax
	jne	SHORT $LN112@bmi_t1_dec@2
$LN111@bmi_t1_dec@2:
; Line 349
	mov	rax, QWORD PTR contextWord$[rsp]
	add	rax, 8
	mov	QWORD PTR contextWord$[rsp], rax
	mov	rax, QWORD PTR contextWord$[rsp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN110@bmi_t1_dec@2
; Line 351
	mov	eax, DWORD PTR c$[rsp]
	sub	eax, 2
	mov	DWORD PTR c$[rsp], eax
; Line 352
	mov	rax, QWORD PTR sp$[rsp]
	add	rax, 8
	mov	QWORD PTR sp$[rsp], rax
; Line 353
	jmp	SHORT $LN111@bmi_t1_dec@2
$LN110@bmi_t1_dec@2:
; Line 354
	mov	rax, QWORD PTR contextWord$[rsp]
	sub	rax, 4
	mov	QWORD PTR contextWord$[rsp], rax
; Line 355
	mov	eax, DWORD PTR c$[rsp]
	sub	eax, 1
	mov	DWORD PTR c$[rsp], eax
; Line 356
	mov	rax, QWORD PTR sp$[rsp]
	add	rax, 4
	mov	QWORD PTR sp$[rsp], rax
; Line 357
	jmp	$LN114@bmi_t1_dec@2
; Line 359
	jmp	$LN109@bmi_t1_dec@2
$LN112@bmi_t1_dec@2:
; Line 361
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR cword$[rsp], eax
; Line 362
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 1048592				; 00100010H
	cmp	eax, 1048592				; 00100010H
	jne	$LN108@bmi_t1_dec@2
; Line 365
	mov	rax, QWORD PTR sp$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR val$[rsp], eax
; Line 366
	mov	edx, DWORD PTR val$[rsp]
	and	edx, 2147483647				; 7fffffffH
	mov	eax, DWORD PTR p$[rsp]
	movzx	ecx, al
	mov	eax, edx
	sar	eax, cl
	mov	DWORD PTR sym$[rsp], eax
; Line 367
	mov	rax, QWORD PTR states$[rsp]
	mov	QWORD PTR state_ref$[rsp], rax
; Line 368
	cmp	DWORD PTR sym$[rsp], 4
	jge	SHORT $LN107@bmi_t1_dec@2
; Line 370
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 495				; 000001efH
	test	eax, eax
	je	SHORT $LN106@bmi_t1_dec@2
; Line 371
	mov	rax, QWORD PTR state_ref$[rsp]
	add	rax, 16
	mov	QWORD PTR state_ref$[rsp], rax
$LN106@bmi_t1_dec@2:
; Line 373
	jmp	SHORT $LN105@bmi_t1_dec@2
$LN107@bmi_t1_dec@2:
; Line 375
	mov	rax, QWORD PTR state_ref$[rsp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR state_ref$[rsp], rax
$LN105@bmi_t1_dec@2:
; Line 377
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$2881[rsp], eax
	mov	ecx, DWORD PTR _p$2881[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$2881[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN104@bmi_t1_dec@2
	mov	eax, DWORD PTR _p$2881[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN103@bmi_t1_dec@2
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3429[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3429[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN102@bmi_t1_dec@2
$LN103@bmi_t1_dec@2:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3428[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3428[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN102@bmi_t1_dec@2:
	mov	eax, DWORD PTR _p$2881[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN101@bmi_t1_dec@2:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN98@bmi_t1_dec@2
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN97@bmi_t1_dec@2
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN96@bmi_t1_dec@2
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN95@bmi_t1_dec@2
$LN96@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN95@bmi_t1_dec@2:
	jmp	SHORT $LN94@bmi_t1_dec@2
$LN97@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN94@bmi_t1_dec@2:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN98@bmi_t1_dec@2:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN101@bmi_t1_dec@2
	jmp	$LN93@bmi_t1_dec@2
$LN104@bmi_t1_dec@2:
	mov	ecx, DWORD PTR _p$2881[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN92@bmi_t1_dec@2
	mov	eax, DWORD PTR _p$2881[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN91@bmi_t1_dec@2
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3427[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3427[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN90@bmi_t1_dec@2
$LN91@bmi_t1_dec@2:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3426[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3426[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN90@bmi_t1_dec@2:
$LN89@bmi_t1_dec@2:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN86@bmi_t1_dec@2
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN85@bmi_t1_dec@2
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN84@bmi_t1_dec@2
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN83@bmi_t1_dec@2
$LN84@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN83@bmi_t1_dec@2:
	jmp	SHORT $LN82@bmi_t1_dec@2
$LN85@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN82@bmi_t1_dec@2:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN86@bmi_t1_dec@2:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN89@bmi_t1_dec@2
$LN92@bmi_t1_dec@2:
$LN93@bmi_t1_dec@2:
; Line 378
	mov	edx, 1
	sub	edx, DWORD PTR sym$[rsp]
	mov	eax, DWORD PTR p$[rsp]
	movzx	ecx, al
	mov	eax, edx
	shl	eax, cl
	mov	ecx, eax
	mov	eax, DWORD PTR val$[rsp]
	xor	eax, ecx
	mov	DWORD PTR val$[rsp], eax
; Line 379
	mov	ecx, DWORD PTR half_lsb$[rsp]
	mov	eax, DWORD PTR val$[rsp]
	or	eax, ecx
	mov	DWORD PTR val$[rsp], eax
; Line 380
	mov	rcx, QWORD PTR sp$[rsp]
	mov	eax, DWORD PTR val$[rsp]
	mov	DWORD PTR [rcx], eax
$LN108@bmi_t1_dec@2:
; Line 382
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 8388736				; 00800080H
	cmp	eax, 8388736				; 00800080H
	jne	$LN81@bmi_t1_dec@2
; Line 385
	movsxd	rcx, DWORD PTR width$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	mov	eax, DWORD PTR [rax+rcx*4]
	mov	DWORD PTR val$[rsp], eax
; Line 386
	mov	edx, DWORD PTR val$[rsp]
	and	edx, 2147483647				; 7fffffffH
	mov	eax, DWORD PTR p$[rsp]
	movzx	ecx, al
	mov	eax, edx
	sar	eax, cl
	mov	DWORD PTR sym$[rsp], eax
; Line 387
	mov	rax, QWORD PTR states$[rsp]
	mov	QWORD PTR state_ref$[rsp], rax
; Line 388
	cmp	DWORD PTR sym$[rsp], 4
	jge	SHORT $LN80@bmi_t1_dec@2
; Line 390
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 3960				; 00000f78H
	test	eax, eax
	je	SHORT $LN79@bmi_t1_dec@2
; Line 391
	mov	rax, QWORD PTR state_ref$[rsp]
	add	rax, 16
	mov	QWORD PTR state_ref$[rsp], rax
$LN79@bmi_t1_dec@2:
; Line 393
	jmp	SHORT $LN78@bmi_t1_dec@2
$LN80@bmi_t1_dec@2:
; Line 395
	mov	rax, QWORD PTR state_ref$[rsp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR state_ref$[rsp], rax
$LN78@bmi_t1_dec@2:
; Line 397
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$2914[rsp], eax
	mov	ecx, DWORD PTR _p$2914[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$2914[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN77@bmi_t1_dec@2
	mov	eax, DWORD PTR _p$2914[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN76@bmi_t1_dec@2
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3425[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3425[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN75@bmi_t1_dec@2
$LN76@bmi_t1_dec@2:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3424[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3424[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN75@bmi_t1_dec@2:
	mov	eax, DWORD PTR _p$2914[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN74@bmi_t1_dec@2:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN71@bmi_t1_dec@2
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN70@bmi_t1_dec@2
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN69@bmi_t1_dec@2
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN68@bmi_t1_dec@2
$LN69@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN68@bmi_t1_dec@2:
	jmp	SHORT $LN67@bmi_t1_dec@2
$LN70@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN67@bmi_t1_dec@2:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN71@bmi_t1_dec@2:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN74@bmi_t1_dec@2
	jmp	$LN66@bmi_t1_dec@2
$LN77@bmi_t1_dec@2:
	mov	ecx, DWORD PTR _p$2914[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN65@bmi_t1_dec@2
	mov	eax, DWORD PTR _p$2914[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN64@bmi_t1_dec@2
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3423[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3423[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN63@bmi_t1_dec@2
$LN64@bmi_t1_dec@2:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3422[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3422[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN63@bmi_t1_dec@2:
$LN62@bmi_t1_dec@2:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN59@bmi_t1_dec@2
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN58@bmi_t1_dec@2
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN57@bmi_t1_dec@2
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN56@bmi_t1_dec@2
$LN57@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN56@bmi_t1_dec@2:
	jmp	SHORT $LN55@bmi_t1_dec@2
$LN58@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN55@bmi_t1_dec@2:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN59@bmi_t1_dec@2:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN62@bmi_t1_dec@2
$LN65@bmi_t1_dec@2:
$LN66@bmi_t1_dec@2:
; Line 398
	mov	edx, 1
	sub	edx, DWORD PTR sym$[rsp]
	mov	eax, DWORD PTR p$[rsp]
	movzx	ecx, al
	mov	eax, edx
	shl	eax, cl
	mov	ecx, eax
	mov	eax, DWORD PTR val$[rsp]
	xor	eax, ecx
	mov	DWORD PTR val$[rsp], eax
; Line 399
	mov	ecx, DWORD PTR half_lsb$[rsp]
	mov	eax, DWORD PTR val$[rsp]
	or	eax, ecx
	mov	DWORD PTR val$[rsp], eax
; Line 400
	movsxd	rdx, DWORD PTR width$[rsp]
	mov	rcx, QWORD PTR sp$[rsp]
	mov	eax, DWORD PTR val$[rsp]
	mov	DWORD PTR [rcx+rdx*4], eax
$LN81@bmi_t1_dec@2:
; Line 402
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 67109888				; 04000400H
	cmp	eax, 67109888				; 04000400H
	jne	$LN54@bmi_t1_dec@2
; Line 405
	movsxd	rcx, DWORD PTR width_by2$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	mov	eax, DWORD PTR [rax+rcx*4]
	mov	DWORD PTR val$[rsp], eax
; Line 406
	mov	edx, DWORD PTR val$[rsp]
	and	edx, 2147483647				; 7fffffffH
	mov	eax, DWORD PTR p$[rsp]
	movzx	ecx, al
	mov	eax, edx
	sar	eax, cl
	mov	DWORD PTR sym$[rsp], eax
; Line 407
	mov	rax, QWORD PTR states$[rsp]
	mov	QWORD PTR state_ref$[rsp], rax
; Line 408
	cmp	DWORD PTR sym$[rsp], 4
	jge	SHORT $LN53@bmi_t1_dec@2
; Line 410
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 31680				; 00007bc0H
	test	eax, eax
	je	SHORT $LN52@bmi_t1_dec@2
; Line 411
	mov	rax, QWORD PTR state_ref$[rsp]
	add	rax, 16
	mov	QWORD PTR state_ref$[rsp], rax
$LN52@bmi_t1_dec@2:
; Line 413
	jmp	SHORT $LN51@bmi_t1_dec@2
$LN53@bmi_t1_dec@2:
; Line 415
	mov	rax, QWORD PTR state_ref$[rsp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR state_ref$[rsp], rax
$LN51@bmi_t1_dec@2:
; Line 417
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$2947[rsp], eax
	mov	ecx, DWORD PTR _p$2947[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$2947[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN50@bmi_t1_dec@2
	mov	eax, DWORD PTR _p$2947[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN49@bmi_t1_dec@2
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3421[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3421[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN48@bmi_t1_dec@2
$LN49@bmi_t1_dec@2:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3420[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3420[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN48@bmi_t1_dec@2:
	mov	eax, DWORD PTR _p$2947[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN47@bmi_t1_dec@2:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN44@bmi_t1_dec@2
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN43@bmi_t1_dec@2
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN42@bmi_t1_dec@2
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN41@bmi_t1_dec@2
$LN42@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN41@bmi_t1_dec@2:
	jmp	SHORT $LN40@bmi_t1_dec@2
$LN43@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN40@bmi_t1_dec@2:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN44@bmi_t1_dec@2:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN47@bmi_t1_dec@2
	jmp	$LN39@bmi_t1_dec@2
$LN50@bmi_t1_dec@2:
	mov	ecx, DWORD PTR _p$2947[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN38@bmi_t1_dec@2
	mov	eax, DWORD PTR _p$2947[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN37@bmi_t1_dec@2
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3419[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3419[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN36@bmi_t1_dec@2
$LN37@bmi_t1_dec@2:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3418[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3418[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN36@bmi_t1_dec@2:
$LN35@bmi_t1_dec@2:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN32@bmi_t1_dec@2
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN31@bmi_t1_dec@2
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN30@bmi_t1_dec@2
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN29@bmi_t1_dec@2
$LN30@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN29@bmi_t1_dec@2:
	jmp	SHORT $LN28@bmi_t1_dec@2
$LN31@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN28@bmi_t1_dec@2:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN32@bmi_t1_dec@2:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN35@bmi_t1_dec@2
$LN38@bmi_t1_dec@2:
$LN39@bmi_t1_dec@2:
; Line 418
	mov	edx, 1
	sub	edx, DWORD PTR sym$[rsp]
	mov	eax, DWORD PTR p$[rsp]
	movzx	ecx, al
	mov	eax, edx
	shl	eax, cl
	mov	ecx, eax
	mov	eax, DWORD PTR val$[rsp]
	xor	eax, ecx
	mov	DWORD PTR val$[rsp], eax
; Line 419
	mov	ecx, DWORD PTR half_lsb$[rsp]
	mov	eax, DWORD PTR val$[rsp]
	or	eax, ecx
	mov	DWORD PTR val$[rsp], eax
; Line 420
	movsxd	rdx, DWORD PTR width_by2$[rsp]
	mov	rcx, QWORD PTR sp$[rsp]
	mov	eax, DWORD PTR val$[rsp]
	mov	DWORD PTR [rcx+rdx*4], eax
$LN54@bmi_t1_dec@2:
; Line 422
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 536879104				; 20002000H
	cmp	eax, 536879104				; 20002000H
	jne	$LN27@bmi_t1_dec@2
; Line 425
	movsxd	rcx, DWORD PTR width_by3$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	mov	eax, DWORD PTR [rax+rcx*4]
	mov	DWORD PTR val$[rsp], eax
; Line 426
	mov	edx, DWORD PTR val$[rsp]
	and	edx, 2147483647				; 7fffffffH
	mov	eax, DWORD PTR p$[rsp]
	movzx	ecx, al
	mov	eax, edx
	sar	eax, cl
	mov	DWORD PTR sym$[rsp], eax
; Line 427
	mov	rax, QWORD PTR states$[rsp]
	mov	QWORD PTR state_ref$[rsp], rax
; Line 428
	cmp	DWORD PTR sym$[rsp], 4
	jge	SHORT $LN26@bmi_t1_dec@2
; Line 430
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 253440				; 0003de00H
	test	eax, eax
	je	SHORT $LN25@bmi_t1_dec@2
; Line 432
	mov	rax, QWORD PTR state_ref$[rsp]
	add	rax, 16
	mov	QWORD PTR state_ref$[rsp], rax
$LN25@bmi_t1_dec@2:
; Line 435
	jmp	SHORT $LN24@bmi_t1_dec@2
$LN26@bmi_t1_dec@2:
; Line 437
	mov	rax, QWORD PTR state_ref$[rsp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR state_ref$[rsp], rax
$LN24@bmi_t1_dec@2:
; Line 439
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$2980[rsp], eax
	mov	ecx, DWORD PTR _p$2980[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$2980[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN23@bmi_t1_dec@2
	mov	eax, DWORD PTR _p$2980[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN22@bmi_t1_dec@2
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3417[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3417[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN21@bmi_t1_dec@2
$LN22@bmi_t1_dec@2:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3416[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3416[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN21@bmi_t1_dec@2:
	mov	eax, DWORD PTR _p$2980[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN20@bmi_t1_dec@2:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN17@bmi_t1_dec@2
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN16@bmi_t1_dec@2
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN15@bmi_t1_dec@2
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN14@bmi_t1_dec@2
$LN15@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN14@bmi_t1_dec@2:
	jmp	SHORT $LN13@bmi_t1_dec@2
$LN16@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN13@bmi_t1_dec@2:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN17@bmi_t1_dec@2:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN20@bmi_t1_dec@2
	jmp	$LN12@bmi_t1_dec@2
$LN23@bmi_t1_dec@2:
	mov	ecx, DWORD PTR _p$2980[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN11@bmi_t1_dec@2
	mov	eax, DWORD PTR _p$2980[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN10@bmi_t1_dec@2
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3415[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3415[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN9@bmi_t1_dec@2
$LN10@bmi_t1_dec@2:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3414[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3414[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN9@bmi_t1_dec@2:
$LN8@bmi_t1_dec@2:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN5@bmi_t1_dec@2
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN4@bmi_t1_dec@2
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN3@bmi_t1_dec@2
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN2@bmi_t1_dec@2
$LN3@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN2@bmi_t1_dec@2:
	jmp	SHORT $LN1@bmi_t1_dec@2
$LN4@bmi_t1_dec@2:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN1@bmi_t1_dec@2:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN5@bmi_t1_dec@2:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN8@bmi_t1_dec@2
$LN11@bmi_t1_dec@2:
$LN12@bmi_t1_dec@2:
; Line 440
	mov	edx, 1
	sub	edx, DWORD PTR sym$[rsp]
	mov	eax, DWORD PTR p$[rsp]
	movzx	ecx, al
	mov	eax, edx
	shl	eax, cl
	mov	ecx, eax
	mov	eax, DWORD PTR val$[rsp]
	xor	eax, ecx
	mov	DWORD PTR val$[rsp], eax
; Line 441
	mov	ecx, DWORD PTR half_lsb$[rsp]
	mov	eax, DWORD PTR val$[rsp]
	or	eax, ecx
	mov	DWORD PTR val$[rsp], eax
; Line 442
	movsxd	rdx, DWORD PTR width_by3$[rsp]
	mov	rcx, QWORD PTR sp$[rsp]
	mov	eax, DWORD PTR val$[rsp]
	mov	DWORD PTR [rcx+rdx*4], eax
$LN27@bmi_t1_dec@2:
$LN109@bmi_t1_dec@2:
; Line 445
	mov	eax, DWORD PTR c$[rsp]
	sub	eax, 1
	mov	DWORD PTR c$[rsp], eax
; Line 446
	mov	rax, QWORD PTR sp$[rsp]
	add	rax, 4
	mov	QWORD PTR sp$[rsp], rax
; Line 447
	mov	rax, QWORD PTR contextWord$[rsp]
	add	rax, 4
	mov	QWORD PTR contextWord$[rsp], rax
$LN114@bmi_t1_dec@2:
; Line 448
	cmp	DWORD PTR c$[rsp], 0
	jg	$LN115@bmi_t1_dec@2
; Line 449
	mov	eax, DWORD PTR num_stripes$[rsp]
	sub	eax, 1
	mov	DWORD PTR num_stripes$[rsp], eax
; Line 450
	mov	rax, QWORD PTR contextWord$[rsp]
	add	rax, 12
	mov	QWORD PTR contextWord$[rsp], rax
; Line 451
	movsxd	rcx, DWORD PTR width_by3$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR sp$[rsp], rax
; Line 452
	cmp	DWORD PTR num_stripes$[rsp], 0
	jg	$LN118@bmi_t1_dec@2
; Line 454
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	mov	DWORD PTR [rcx], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	mov	DWORD PTR [rcx+4], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_t$[rsp]
	mov	DWORD PTR [rcx+8], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_T$[rsp]
	mov	DWORD PTR [rcx+12], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_S$[rsp]
	mov	DWORD PTR [rcx+16], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	mov	QWORD PTR [rcx+24], rax
; Line 456
	add	rsp, 344				; 00000158H
	pop	rdi
	pop	rsi
	ret	0
bmi_t1_decode_pass1_asm64 ENDP
_TEXT	ENDS
PUBLIC	$T3434
PUBLIC	$T3435
PUBLIC	$T3436
PUBLIC	$T3437
PUBLIC	$T3438
PUBLIC	$T3439
PUBLIC	$T3440
PUBLIC	$T3441
PUBLIC	$T3442
PUBLIC	$T3443
PUBLIC	$T3444
PUBLIC	$T3445
PUBLIC	$T3446
PUBLIC	$T3447
PUBLIC	$T3448
PUBLIC	$T3449
PUBLIC	$T3450
PUBLIC	$T3451
PUBLIC	$T3452
PUBLIC	$T3453
PUBLIC	$T3454
PUBLIC	$T3455
PUBLIC	$T3456
PUBLIC	$T3457
PUBLIC	$T3458
PUBLIC	$T3459
PUBLIC	$T3460
PUBLIC	$T3461
PUBLIC	$T3462
PUBLIC	$T3463
PUBLIC	$T3464
PUBLIC	$T3465
PUBLIC	$T3466
PUBLIC	$T3467
PUBLIC	$T3468
PUBLIC	$T3469
PUBLIC	$T3470
PUBLIC	$T3471
PUBLIC	$T3472
PUBLIC	$T3473
PUBLIC	$T3474
PUBLIC	$T3475
PUBLIC	$T3476
PUBLIC	$T3477
PUBLIC	bmi_t1_decode_pass2_asm64
pdata	SEGMENT
$pdata$bmi_t1_decode_pass2_asm64 DD imagerel $LN285
	DD	imagerel $LN285+10398
	DD	imagerel $unwind$bmi_t1_decode_pass2_asm64
pdata	ENDS
xdata	SEGMENT
$unwind$bmi_t1_decode_pass2_asm64 DD 041d01H
	DD	06b011dH
	DD	060157016H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
width_by3$ = 0
run_length$ = 4
reg_A$ = 8
reg_t$ = 12
width_by2$ = 16
cword$ = 20
reg_T$ = 24
reg_buf_next$ = 32
val$ = 40
reg_C$ = 44
state_ref$ = 48
sym$ = 56
reg_S$ = 60
c$ = 64
one_and_half$ = 68
_p$3043 = 72
tmpRunState$3073 = 80
_p$3074 = 96
_p$3102 = 100
_p$3133 = 104
_p$3163 = 108
_p$3194 = 112
_p$3224 = 116
_p$3255 = 120
_p$3285 = 124
_p$3316 = 128
_p$3346 = 132
$T3434 = 136
$T3435 = 152
$T3436 = 168
$T3437 = 184
$T3438 = 200
$T3439 = 216
$T3440 = 232
$T3441 = 248
$T3442 = 264
$T3443 = 280
$T3444 = 296
$T3445 = 312
$T3446 = 328
$T3447 = 344
$T3448 = 360
$T3449 = 376
$T3450 = 392
$T3451 = 408
$T3452 = 424
$T3453 = 440
$T3454 = 456
$T3455 = 472
$T3456 = 488
$T3457 = 504
$T3458 = 520
$T3459 = 536
$T3460 = 552
$T3461 = 568
$T3462 = 584
$T3463 = 600
$T3464 = 616
$T3465 = 632
$T3466 = 648
$T3467 = 664
$T3468 = 680
$T3469 = 696
$T3470 = 712
$T3471 = 728
$T3472 = 744
$T3473 = 760
$T3474 = 776
$T3475 = 792
$T3476 = 808
$T3477 = 824
coder$ = 880
states$ = 888
p$ = 896
lut_ctx$ = 904
sp$ = 912
contextWord$ = 920
width$ = 928
num_stripes$ = 936
lut_ctx_sign$ = 944
tableBase$ = 952
tmpTransition$ = 960
bmi_t1_decode_pass2_asm64 PROC
; Line 460
$LN285:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 856				; 00000358H
; Line 461
	mov	rax, QWORD PTR coder$[rsp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR reg_A$[rsp], eax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR reg_C$[rsp], eax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR reg_t$[rsp], eax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax+12]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR [rax+16]
	mov	DWORD PTR reg_S$[rsp], eax
; Line 467
	mov	eax, DWORD PTR p$[rsp]
	mov	edx, 1
	movzx	ecx, al
	shl	edx, cl
	mov	ecx, DWORD PTR p$[rsp]
	mov	eax, 1
	shl	eax, cl
	mov	ecx, eax
	sar	ecx, 1
	mov	eax, edx
	add	eax, ecx
	mov	DWORD PTR one_and_half$[rsp], eax
; Line 468
	mov	eax, DWORD PTR width$[rsp]
	shl	eax, 1
	mov	DWORD PTR width_by2$[rsp], eax
	mov	ecx, DWORD PTR width$[rsp]
	mov	eax, DWORD PTR width_by2$[rsp]
	add	eax, ecx
	mov	DWORD PTR width_by3$[rsp], eax
$LN282@bmi_t1_dec@3:
; Line 473
	mov	eax, DWORD PTR width$[rsp]
	mov	DWORD PTR c$[rsp], eax
$LN279@bmi_t1_dec@3:
; Line 477
	mov	DWORD PTR run_length$[rsp], -1
; Line 478
	mov	rax, QWORD PTR contextWord$[rsp]
	cmp	DWORD PTR [rax], 0
	jne	$LN276@bmi_t1_dec@3
; Line 480
	mov	rax, QWORD PTR states$[rsp]
	mov	eax, DWORD PTR [rax+144]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR states$[rsp]
	mov	eax, DWORD PTR [rax+144]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$3043[rsp], eax
	mov	ecx, DWORD PTR _p$3043[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$3043[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN275@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3043[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN274@bmi_t1_dec@3
	mov	rsi, QWORD PTR states$[rsp]
	mov	rsi, QWORD PTR [rsi+152]
	lea	rdi, QWORD PTR $T3477[rsp]
	mov	ecx, 16
	rep movsb
	mov	rdi, QWORD PTR states$[rsp]
	lea	rsi, QWORD PTR $T3477[rsp]
	add	rdi, 144				; 00000090H
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN273@bmi_t1_dec@3
$LN274@bmi_t1_dec@3:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR states$[rsp]
	mov	rsi, QWORD PTR [rsi+152]
	lea	rdi, QWORD PTR $T3476[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	mov	rdi, QWORD PTR states$[rsp]
	lea	rsi, QWORD PTR $T3476[rsp]
	add	rdi, 144				; 00000090H
	mov	ecx, 16
	rep movsb
$LN273@bmi_t1_dec@3:
	mov	eax, DWORD PTR _p$3043[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN272@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN269@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN268@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN267@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN266@bmi_t1_dec@3
$LN267@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN266@bmi_t1_dec@3:
	jmp	SHORT $LN265@bmi_t1_dec@3
$LN268@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN265@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN269@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN272@bmi_t1_dec@3
	jmp	$LN264@bmi_t1_dec@3
$LN275@bmi_t1_dec@3:
	mov	ecx, DWORD PTR _p$3043[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN263@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3043[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN262@bmi_t1_dec@3
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR states$[rsp]
	mov	rsi, QWORD PTR [rsi+152]
	lea	rdi, QWORD PTR $T3475[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	mov	rdi, QWORD PTR states$[rsp]
	lea	rsi, QWORD PTR $T3475[rsp]
	add	rdi, 144				; 00000090H
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN261@bmi_t1_dec@3
$LN262@bmi_t1_dec@3:
	mov	rsi, QWORD PTR states$[rsp]
	mov	rsi, QWORD PTR [rsi+152]
	lea	rdi, QWORD PTR $T3474[rsp]
	mov	ecx, 16
	rep movsb
	mov	rdi, QWORD PTR states$[rsp]
	lea	rsi, QWORD PTR $T3474[rsp]
	add	rdi, 144				; 00000090H
	mov	ecx, 16
	rep movsb
$LN261@bmi_t1_dec@3:
$LN260@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN257@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN256@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN255@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN254@bmi_t1_dec@3
$LN255@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN254@bmi_t1_dec@3:
	jmp	SHORT $LN253@bmi_t1_dec@3
$LN256@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN253@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN257@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN260@bmi_t1_dec@3
$LN263@bmi_t1_dec@3:
$LN264@bmi_t1_dec@3:
; Line 481
	cmp	DWORD PTR sym$[rsp], 0
	jne	SHORT $LN252@bmi_t1_dec@3
; Line 483
	mov	eax, DWORD PTR c$[rsp]
	sub	eax, 1
	mov	DWORD PTR c$[rsp], eax
; Line 484
	mov	rax, QWORD PTR sp$[rsp]
	add	rax, 4
	mov	QWORD PTR sp$[rsp], rax
; Line 485
	mov	rax, QWORD PTR contextWord$[rsp]
	add	rax, 4
	mov	QWORD PTR contextWord$[rsp], rax
; Line 486
	jmp	$LN278@bmi_t1_dec@3
; Line 488
	jmp	$LN251@bmi_t1_dec@3
$LN252@bmi_t1_dec@3:
; Line 492
	mov	DWORD PTR tmpRunState$3073[rsp], 5636352 ; 00560100H
; Line 493
	mov	rax, QWORD PTR tmpTransition$[rsp]
	mov	QWORD PTR tmpRunState$3073[rsp+8], rax
; Line 494
	mov	eax, DWORD PTR tmpRunState$3073[rsp]
	and	eax, 1
	mov	DWORD PTR run_length$[rsp], eax
	mov	eax, DWORD PTR tmpRunState$3073[rsp]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$3074[rsp], eax
	mov	ecx, DWORD PTR _p$3074[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$3074[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN250@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3074[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN249@bmi_t1_dec@3
	lea	rdi, QWORD PTR $T3473[rsp]
	mov	rsi, QWORD PTR tmpRunState$3073[rsp+8]
	mov	ecx, 16
	rep movsb
	lea	rdi, QWORD PTR tmpRunState$3073[rsp]
	lea	rsi, QWORD PTR $T3473[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN248@bmi_t1_dec@3
$LN249@bmi_t1_dec@3:
	mov	eax, DWORD PTR run_length$[rsp]
	xor	eax, 1
	mov	DWORD PTR run_length$[rsp], eax
	lea	rdi, QWORD PTR $T3472[rsp]
	mov	rsi, QWORD PTR tmpRunState$3073[rsp+8]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rdi, QWORD PTR tmpRunState$3073[rsp]
	lea	rsi, QWORD PTR $T3472[rsp]
	mov	ecx, 16
	rep movsb
$LN248@bmi_t1_dec@3:
	mov	eax, DWORD PTR _p$3074[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN247@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN244@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN243@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN242@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN241@bmi_t1_dec@3
$LN242@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN241@bmi_t1_dec@3:
	jmp	SHORT $LN240@bmi_t1_dec@3
$LN243@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN240@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN244@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN247@bmi_t1_dec@3
	jmp	$LN239@bmi_t1_dec@3
$LN250@bmi_t1_dec@3:
	mov	ecx, DWORD PTR _p$3074[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN238@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3074[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN237@bmi_t1_dec@3
	mov	eax, DWORD PTR run_length$[rsp]
	xor	eax, 1
	mov	DWORD PTR run_length$[rsp], eax
	lea	rdi, QWORD PTR $T3471[rsp]
	mov	rsi, QWORD PTR tmpRunState$3073[rsp+8]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rdi, QWORD PTR tmpRunState$3073[rsp]
	lea	rsi, QWORD PTR $T3471[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN236@bmi_t1_dec@3
$LN237@bmi_t1_dec@3:
	lea	rdi, QWORD PTR $T3470[rsp]
	mov	rsi, QWORD PTR tmpRunState$3073[rsp+8]
	mov	ecx, 16
	rep movsb
	lea	rdi, QWORD PTR tmpRunState$3073[rsp]
	lea	rsi, QWORD PTR $T3470[rsp]
	mov	ecx, 16
	rep movsb
$LN236@bmi_t1_dec@3:
$LN235@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN232@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN231@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN230@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN229@bmi_t1_dec@3
$LN230@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN229@bmi_t1_dec@3:
	jmp	SHORT $LN228@bmi_t1_dec@3
$LN231@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN228@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN232@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN235@bmi_t1_dec@3
$LN238@bmi_t1_dec@3:
$LN239@bmi_t1_dec@3:
; Line 495
	mov	eax, DWORD PTR tmpRunState$3073[rsp]
	and	eax, 1
	mov	DWORD PTR val$[rsp], eax
	mov	eax, DWORD PTR tmpRunState$3073[rsp]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$3102[rsp], eax
	mov	ecx, DWORD PTR _p$3102[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$3102[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN227@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3102[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN226@bmi_t1_dec@3
	lea	rdi, QWORD PTR $T3469[rsp]
	mov	rsi, QWORD PTR tmpRunState$3073[rsp+8]
	mov	ecx, 16
	rep movsb
	lea	rdi, QWORD PTR tmpRunState$3073[rsp]
	lea	rsi, QWORD PTR $T3469[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN225@bmi_t1_dec@3
$LN226@bmi_t1_dec@3:
	mov	eax, DWORD PTR val$[rsp]
	xor	eax, 1
	mov	DWORD PTR val$[rsp], eax
	lea	rdi, QWORD PTR $T3468[rsp]
	mov	rsi, QWORD PTR tmpRunState$3073[rsp+8]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rdi, QWORD PTR tmpRunState$3073[rsp]
	lea	rsi, QWORD PTR $T3468[rsp]
	mov	ecx, 16
	rep movsb
$LN225@bmi_t1_dec@3:
	mov	eax, DWORD PTR _p$3102[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN224@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN221@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN220@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN219@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN218@bmi_t1_dec@3
$LN219@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN218@bmi_t1_dec@3:
	jmp	SHORT $LN217@bmi_t1_dec@3
$LN220@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN217@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN221@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN224@bmi_t1_dec@3
	jmp	$LN216@bmi_t1_dec@3
$LN227@bmi_t1_dec@3:
	mov	ecx, DWORD PTR _p$3102[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN215@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3102[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN214@bmi_t1_dec@3
	mov	eax, DWORD PTR val$[rsp]
	xor	eax, 1
	mov	DWORD PTR val$[rsp], eax
	lea	rdi, QWORD PTR $T3467[rsp]
	mov	rsi, QWORD PTR tmpRunState$3073[rsp+8]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rdi, QWORD PTR tmpRunState$3073[rsp]
	lea	rsi, QWORD PTR $T3467[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN213@bmi_t1_dec@3
$LN214@bmi_t1_dec@3:
	lea	rdi, QWORD PTR $T3466[rsp]
	mov	rsi, QWORD PTR tmpRunState$3073[rsp+8]
	mov	ecx, 16
	rep movsb
	lea	rdi, QWORD PTR tmpRunState$3073[rsp]
	lea	rsi, QWORD PTR $T3466[rsp]
	mov	ecx, 16
	rep movsb
$LN213@bmi_t1_dec@3:
$LN212@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN209@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN208@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN207@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN206@bmi_t1_dec@3
$LN207@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN206@bmi_t1_dec@3:
	jmp	SHORT $LN205@bmi_t1_dec@3
$LN208@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN205@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN209@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN212@bmi_t1_dec@3
$LN215@bmi_t1_dec@3:
$LN216@bmi_t1_dec@3:
; Line 496
	mov	ecx, DWORD PTR val$[rsp]
	mov	eax, DWORD PTR run_length$[rsp]
	lea	eax, DWORD PTR [rcx+rax*2]
	mov	DWORD PTR run_length$[rsp], eax
; Line 497
	mov	DWORD PTR sym$[rsp], 0
$LN251@bmi_t1_dec@3:
$LN276@bmi_t1_dec@3:
; Line 500
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR cword$[rsp], eax
; Line 501
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 2621456				; 00280010H
	test	eax, eax
	je	SHORT $LN203@bmi_t1_dec@3
	cmp	DWORD PTR run_length$[rsp], 0
	jne	$LN204@bmi_t1_dec@3
$LN203@bmi_t1_dec@3:
; Line 504
	cmp	DWORD PTR run_length$[rsp], -1
	jne	$LN202@bmi_t1_dec@3
; Line 506
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 495				; 000001efH
	movsxd	rcx, eax
	mov	rax, QWORD PTR lut_ctx$[rsp]
	movzx	ecx, BYTE PTR [rax+rcx]
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	add	rax, rcx
	mov	QWORD PTR state_ref$[rsp], rax
; Line 507
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$3133[rsp], eax
	mov	ecx, DWORD PTR _p$3133[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$3133[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN201@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3133[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN200@bmi_t1_dec@3
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3465[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3465[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN199@bmi_t1_dec@3
$LN200@bmi_t1_dec@3:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3464[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3464[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN199@bmi_t1_dec@3:
	mov	eax, DWORD PTR _p$3133[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN198@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN195@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN194@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN193@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN192@bmi_t1_dec@3
$LN193@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN192@bmi_t1_dec@3:
	jmp	SHORT $LN191@bmi_t1_dec@3
$LN194@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN191@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN195@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN198@bmi_t1_dec@3
	jmp	$LN190@bmi_t1_dec@3
$LN201@bmi_t1_dec@3:
	mov	ecx, DWORD PTR _p$3133[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN189@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3133[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN188@bmi_t1_dec@3
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3463[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3463[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN187@bmi_t1_dec@3
$LN188@bmi_t1_dec@3:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3462[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3462[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN187@bmi_t1_dec@3:
$LN186@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN183@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN182@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN181@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN180@bmi_t1_dec@3
$LN181@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN180@bmi_t1_dec@3:
	jmp	SHORT $LN179@bmi_t1_dec@3
$LN182@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN179@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN183@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN186@bmi_t1_dec@3
$LN189@bmi_t1_dec@3:
$LN190@bmi_t1_dec@3:
$LN202@bmi_t1_dec@3:
; Line 509
	cmp	DWORD PTR sym$[rsp], 0
	jne	SHORT $LN177@bmi_t1_dec@3
	cmp	DWORD PTR run_length$[rsp], 0
	jne	$LN178@bmi_t1_dec@3
$LN177@bmi_t1_dec@3:
; Line 511
	mov	DWORD PTR run_length$[rsp], -1
; Line 518
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 4194432				; 00400080H
	mov	DWORD PTR sym$[rsp], eax
; Line 519
	mov	ecx, DWORD PTR cword$[rsp]
	and	ecx, 2
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 520
	mov	ecx, DWORD PTR cword$[rsp]
	and	ecx, 262144				; 00040000H
	sar	ecx, 2
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 522
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	and	ecx, 524304				; 00080010H
	sar	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 523
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	and	ecx, 524304				; 00080010H
	shl	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 525
	mov	ecx, DWORD PTR sym$[rsp]
	sar	ecx, 14
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 526
	mov	eax, DWORD PTR sym$[rsp]
	sar	eax, 1
	mov	DWORD PTR sym$[rsp], eax
; Line 527
	mov	eax, DWORD PTR sym$[rsp]
	and	eax, 255				; 000000ffH
	movsxd	rcx, eax
	mov	rax, QWORD PTR lut_ctx_sign$[rsp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	DWORD PTR val$[rsp], eax
; Line 528
	mov	eax, DWORD PTR val$[rsp]
	sar	eax, 1
	movsxd	rcx, eax
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	lea	rax, QWORD PTR [rax+rcx+160]
	mov	QWORD PTR state_ref$[rsp], rax
; Line 529
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$3163[rsp], eax
	mov	ecx, DWORD PTR _p$3163[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$3163[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN176@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3163[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN175@bmi_t1_dec@3
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3461[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3461[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN174@bmi_t1_dec@3
$LN175@bmi_t1_dec@3:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3460[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3460[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN174@bmi_t1_dec@3:
	mov	eax, DWORD PTR _p$3163[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN173@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN170@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN169@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN168@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN167@bmi_t1_dec@3
$LN168@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN167@bmi_t1_dec@3:
	jmp	SHORT $LN166@bmi_t1_dec@3
$LN169@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN166@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN170@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN173@bmi_t1_dec@3
	jmp	$LN165@bmi_t1_dec@3
$LN176@bmi_t1_dec@3:
	mov	ecx, DWORD PTR _p$3163[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN164@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3163[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN163@bmi_t1_dec@3
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3459[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3459[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN162@bmi_t1_dec@3
$LN163@bmi_t1_dec@3:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3458[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3458[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN162@bmi_t1_dec@3:
$LN161@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN158@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN157@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN156@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN155@bmi_t1_dec@3
$LN156@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN155@bmi_t1_dec@3:
	jmp	SHORT $LN154@bmi_t1_dec@3
$LN157@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN154@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN158@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN161@bmi_t1_dec@3
$LN164@bmi_t1_dec@3:
$LN165@bmi_t1_dec@3:
; Line 530
	mov	ecx, DWORD PTR val$[rsp]
	and	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 536
	mov	eax, DWORD PTR width$[rsp]
	neg	eax
	sub	eax, 4
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	edx, DWORD PTR [rax+rcx*4]
	or	edx, 131072				; 00020000H
	mov	eax, DWORD PTR width$[rsp]
	neg	eax
	sub	eax, 4
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
; Line 537
	mov	eax, DWORD PTR width$[rsp]
	neg	eax
	sub	eax, 3
	movsxd	rdx, eax
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 31
	or	ecx, 65536				; 00010000H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	edx, DWORD PTR [rax+rdx*4]
	or	edx, ecx
	mov	eax, DWORD PTR width$[rsp]
	neg	eax
	sub	eax, 3
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
; Line 538
	mov	eax, DWORD PTR width$[rsp]
	neg	eax
	sub	eax, 2
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	edx, DWORD PTR [rax+rcx*4]
	or	edx, 32768				; 00008000H
	mov	eax, DWORD PTR width$[rsp]
	neg	eax
	sub	eax, 2
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
; Line 539
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	or	ecx, 32					; 00000020H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax-4], ecx
; Line 540
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	or	ecx, 8
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+4], ecx
; Line 542
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 19
	or	ecx, 16
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, ecx
	mov	DWORD PTR cword$[rsp], eax
; Line 543
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 31
	add	ecx, DWORD PTR one_and_half$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	mov	DWORD PTR [rax], ecx
$LN178@bmi_t1_dec@3:
$LN204@bmi_t1_dec@3:
; Line 546
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 20971648				; 01400080H
	test	eax, eax
	je	SHORT $LN152@bmi_t1_dec@3
	cmp	DWORD PTR run_length$[rsp], 1
	jne	$LN153@bmi_t1_dec@3
$LN152@bmi_t1_dec@3:
; Line 549
	cmp	DWORD PTR run_length$[rsp], -1
	jne	$LN151@bmi_t1_dec@3
; Line 551
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 3960				; 00000f78H
	sar	eax, 3
	movsxd	rcx, eax
	mov	rax, QWORD PTR lut_ctx$[rsp]
	movzx	ecx, BYTE PTR [rax+rcx]
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	add	rax, rcx
	mov	QWORD PTR state_ref$[rsp], rax
; Line 552
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$3194[rsp], eax
	mov	ecx, DWORD PTR _p$3194[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$3194[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN150@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3194[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN149@bmi_t1_dec@3
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3457[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3457[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN148@bmi_t1_dec@3
$LN149@bmi_t1_dec@3:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3456[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3456[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN148@bmi_t1_dec@3:
	mov	eax, DWORD PTR _p$3194[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN147@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN144@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN143@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN142@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN141@bmi_t1_dec@3
$LN142@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN141@bmi_t1_dec@3:
	jmp	SHORT $LN140@bmi_t1_dec@3
$LN143@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN140@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN144@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN147@bmi_t1_dec@3
	jmp	$LN139@bmi_t1_dec@3
$LN150@bmi_t1_dec@3:
	mov	ecx, DWORD PTR _p$3194[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN138@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3194[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN137@bmi_t1_dec@3
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3455[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3455[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN136@bmi_t1_dec@3
$LN137@bmi_t1_dec@3:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3454[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3454[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN136@bmi_t1_dec@3:
$LN135@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN132@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN131@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN130@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN129@bmi_t1_dec@3
$LN130@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN129@bmi_t1_dec@3:
	jmp	SHORT $LN128@bmi_t1_dec@3
$LN131@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN128@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN132@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN135@bmi_t1_dec@3
$LN138@bmi_t1_dec@3:
$LN139@bmi_t1_dec@3:
$LN151@bmi_t1_dec@3:
; Line 555
	cmp	DWORD PTR sym$[rsp], 0
	jne	SHORT $LN126@bmi_t1_dec@3
	cmp	DWORD PTR run_length$[rsp], 1
	jne	$LN127@bmi_t1_dec@3
$LN126@bmi_t1_dec@3:
; Line 558
	mov	DWORD PTR run_length$[rsp], -1
; Line 563
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 34079760				; 02080410H
	mov	DWORD PTR sym$[rsp], eax
; Line 565
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	and	ecx, 4194432				; 00400080H
	sar	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 566
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	and	ecx, 4194432				; 00400080H
	shl	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 567
	mov	ecx, DWORD PTR sym$[rsp]
	sar	ecx, 14
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 568
	mov	eax, DWORD PTR sym$[rsp]
	sar	eax, 4
	mov	DWORD PTR sym$[rsp], eax
; Line 569
	mov	eax, DWORD PTR sym$[rsp]
	and	eax, 255				; 000000ffH
	movsxd	rcx, eax
	mov	rax, QWORD PTR lut_ctx_sign$[rsp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	DWORD PTR val$[rsp], eax
; Line 570
	mov	eax, DWORD PTR val$[rsp]
	sar	eax, 1
	movsxd	rcx, eax
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	lea	rax, QWORD PTR [rax+rcx+160]
	mov	QWORD PTR state_ref$[rsp], rax
; Line 571
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$3224[rsp], eax
	mov	ecx, DWORD PTR _p$3224[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$3224[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN125@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3224[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN124@bmi_t1_dec@3
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3453[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3453[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN123@bmi_t1_dec@3
$LN124@bmi_t1_dec@3:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3452[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3452[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN123@bmi_t1_dec@3:
	mov	eax, DWORD PTR _p$3224[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN122@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN119@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN118@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN117@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN116@bmi_t1_dec@3
$LN117@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN116@bmi_t1_dec@3:
	jmp	SHORT $LN115@bmi_t1_dec@3
$LN118@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN115@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN119@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN122@bmi_t1_dec@3
	jmp	$LN114@bmi_t1_dec@3
$LN125@bmi_t1_dec@3:
	mov	ecx, DWORD PTR _p$3224[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN113@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3224[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN112@bmi_t1_dec@3
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3451[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3451[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN111@bmi_t1_dec@3
$LN112@bmi_t1_dec@3:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3450[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3450[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN111@bmi_t1_dec@3:
$LN110@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN107@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN106@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN105@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN104@bmi_t1_dec@3
$LN105@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN104@bmi_t1_dec@3:
	jmp	SHORT $LN103@bmi_t1_dec@3
$LN106@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN103@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN107@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN110@bmi_t1_dec@3
$LN113@bmi_t1_dec@3:
$LN114@bmi_t1_dec@3:
; Line 572
	mov	ecx, DWORD PTR val$[rsp]
	and	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 575
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	or	ecx, 256				; 00000100H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax-4], ecx
; Line 576
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	or	ecx, 64					; 00000040H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+4], ecx
; Line 578
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 22
	or	ecx, 128				; 00000080H
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, ecx
	mov	DWORD PTR cword$[rsp], eax
; Line 579
	mov	edx, DWORD PTR sym$[rsp]
	shl	edx, 31
	add	edx, DWORD PTR one_and_half$[rsp]
	movsxd	rcx, DWORD PTR width$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
$LN127@bmi_t1_dec@3:
$LN153@bmi_t1_dec@3:
; Line 583
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 167773184				; 0a000400H
	test	eax, eax
	je	SHORT $LN101@bmi_t1_dec@3
	cmp	DWORD PTR run_length$[rsp], 2
	jne	$LN102@bmi_t1_dec@3
$LN101@bmi_t1_dec@3:
; Line 585
	cmp	DWORD PTR run_length$[rsp], -1
	jne	$LN100@bmi_t1_dec@3
; Line 587
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 31680				; 00007bc0H
	sar	eax, 6
	movsxd	rcx, eax
	mov	rax, QWORD PTR lut_ctx$[rsp]
	movzx	ecx, BYTE PTR [rax+rcx]
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	add	rax, rcx
	mov	QWORD PTR state_ref$[rsp], rax
; Line 588
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$3255[rsp], eax
	mov	ecx, DWORD PTR _p$3255[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$3255[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN99@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3255[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN98@bmi_t1_dec@3
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3449[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3449[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN97@bmi_t1_dec@3
$LN98@bmi_t1_dec@3:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3448[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3448[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN97@bmi_t1_dec@3:
	mov	eax, DWORD PTR _p$3255[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN96@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN93@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN92@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN91@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN90@bmi_t1_dec@3
$LN91@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN90@bmi_t1_dec@3:
	jmp	SHORT $LN89@bmi_t1_dec@3
$LN92@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN89@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN93@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN96@bmi_t1_dec@3
	jmp	$LN88@bmi_t1_dec@3
$LN99@bmi_t1_dec@3:
	mov	ecx, DWORD PTR _p$3255[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN87@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3255[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN86@bmi_t1_dec@3
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3447[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3447[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN85@bmi_t1_dec@3
$LN86@bmi_t1_dec@3:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3446[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3446[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN85@bmi_t1_dec@3:
$LN84@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN81@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN80@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN79@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN78@bmi_t1_dec@3
$LN79@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN78@bmi_t1_dec@3:
	jmp	SHORT $LN77@bmi_t1_dec@3
$LN80@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN77@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN81@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN84@bmi_t1_dec@3
$LN87@bmi_t1_dec@3:
$LN88@bmi_t1_dec@3:
$LN100@bmi_t1_dec@3:
; Line 590
	cmp	DWORD PTR sym$[rsp], 0
	jne	SHORT $LN75@bmi_t1_dec@3
	cmp	DWORD PTR run_length$[rsp], 2
	jne	$LN76@bmi_t1_dec@3
$LN75@bmi_t1_dec@3:
; Line 592
	mov	DWORD PTR run_length$[rsp], -1
; Line 597
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 272638080				; 10402080H
	mov	DWORD PTR sym$[rsp], eax
; Line 599
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	and	ecx, 33555456				; 02000400H
	sar	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 600
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	and	ecx, 33555456				; 02000400H
	shl	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 601
	mov	ecx, DWORD PTR sym$[rsp]
	sar	ecx, 14
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 602
	mov	eax, DWORD PTR sym$[rsp]
	sar	eax, 7
	mov	DWORD PTR sym$[rsp], eax
; Line 603
	mov	eax, DWORD PTR sym$[rsp]
	and	eax, 255				; 000000ffH
	movsxd	rcx, eax
	mov	rax, QWORD PTR lut_ctx_sign$[rsp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	DWORD PTR val$[rsp], eax
; Line 604
	mov	eax, DWORD PTR val$[rsp]
	sar	eax, 1
	movsxd	rcx, eax
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	lea	rax, QWORD PTR [rax+rcx+160]
	mov	QWORD PTR state_ref$[rsp], rax
; Line 605
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$3285[rsp], eax
	mov	ecx, DWORD PTR _p$3285[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$3285[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN74@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3285[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN73@bmi_t1_dec@3
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3445[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3445[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN72@bmi_t1_dec@3
$LN73@bmi_t1_dec@3:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3444[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3444[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN72@bmi_t1_dec@3:
	mov	eax, DWORD PTR _p$3285[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN71@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN68@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN67@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN66@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN65@bmi_t1_dec@3
$LN66@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN65@bmi_t1_dec@3:
	jmp	SHORT $LN64@bmi_t1_dec@3
$LN67@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN64@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN68@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN71@bmi_t1_dec@3
	jmp	$LN63@bmi_t1_dec@3
$LN74@bmi_t1_dec@3:
	mov	ecx, DWORD PTR _p$3285[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN62@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3285[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN61@bmi_t1_dec@3
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3443[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3443[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN60@bmi_t1_dec@3
$LN61@bmi_t1_dec@3:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3442[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3442[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN60@bmi_t1_dec@3:
$LN59@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN56@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN55@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN54@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN53@bmi_t1_dec@3
$LN54@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN53@bmi_t1_dec@3:
	jmp	SHORT $LN52@bmi_t1_dec@3
$LN55@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN52@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN56@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN59@bmi_t1_dec@3
$LN62@bmi_t1_dec@3:
$LN63@bmi_t1_dec@3:
; Line 606
	mov	ecx, DWORD PTR val$[rsp]
	and	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 609
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	or	ecx, 2048				; 00000800H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax-4], ecx
; Line 610
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	or	ecx, 512				; 00000200H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+4], ecx
; Line 612
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 25
	or	ecx, 1024				; 00000400H
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, ecx
	mov	DWORD PTR cword$[rsp], eax
; Line 613
	mov	edx, DWORD PTR sym$[rsp]
	shl	edx, 31
	add	edx, DWORD PTR one_and_half$[rsp]
	movsxd	rcx, DWORD PTR width_by2$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
$LN76@bmi_t1_dec@3:
$LN102@bmi_t1_dec@3:
; Line 616
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 1342185472				; 50002000H
	test	eax, eax
	je	SHORT $LN50@bmi_t1_dec@3
	cmp	DWORD PTR run_length$[rsp], 3
	jne	$LN51@bmi_t1_dec@3
$LN50@bmi_t1_dec@3:
; Line 619
	cmp	DWORD PTR run_length$[rsp], -1
	jne	$LN49@bmi_t1_dec@3
; Line 621
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, 253440				; 0003de00H
	sar	eax, 9
	movsxd	rcx, eax
	mov	rax, QWORD PTR lut_ctx$[rsp]
	movzx	ecx, BYTE PTR [rax+rcx]
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	add	rax, rcx
	mov	QWORD PTR state_ref$[rsp], rax
; Line 622
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$3316[rsp], eax
	mov	ecx, DWORD PTR _p$3316[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$3316[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN48@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3316[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN47@bmi_t1_dec@3
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3441[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3441[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN46@bmi_t1_dec@3
$LN47@bmi_t1_dec@3:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3440[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3440[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN46@bmi_t1_dec@3:
	mov	eax, DWORD PTR _p$3316[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN45@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN42@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN41@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN40@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN39@bmi_t1_dec@3
$LN40@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN39@bmi_t1_dec@3:
	jmp	SHORT $LN38@bmi_t1_dec@3
$LN41@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN38@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN42@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN45@bmi_t1_dec@3
	jmp	$LN37@bmi_t1_dec@3
$LN48@bmi_t1_dec@3:
	mov	ecx, DWORD PTR _p$3316[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN36@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3316[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN35@bmi_t1_dec@3
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3439[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3439[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN34@bmi_t1_dec@3
$LN35@bmi_t1_dec@3:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3438[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3438[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN34@bmi_t1_dec@3:
$LN33@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN30@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN29@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN28@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN27@bmi_t1_dec@3
$LN28@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN27@bmi_t1_dec@3:
	jmp	SHORT $LN26@bmi_t1_dec@3
$LN29@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN26@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN30@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN33@bmi_t1_dec@3
$LN36@bmi_t1_dec@3:
$LN37@bmi_t1_dec@3:
$LN49@bmi_t1_dec@3:
; Line 624
	cmp	DWORD PTR sym$[rsp], 0
	jne	SHORT $LN24@bmi_t1_dec@3
	cmp	DWORD PTR run_length$[rsp], 3
	jne	$LN25@bmi_t1_dec@3
$LN24@bmi_t1_dec@3:
; Line 630
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, -2113862656			; ffffffff82010400H
	mov	DWORD PTR sym$[rsp], eax
; Line 632
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	and	ecx, 268443648				; 10002000H
	sar	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 633
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	and	ecx, 268443648				; 10002000H
	shl	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 634
	mov	ecx, DWORD PTR sym$[rsp]
	sar	ecx, 14
	mov	eax, DWORD PTR sym$[rsp]
	or	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 635
	mov	eax, DWORD PTR sym$[rsp]
	sar	eax, 10
	mov	DWORD PTR sym$[rsp], eax
; Line 638
	mov	eax, DWORD PTR sym$[rsp]
	and	eax, 255				; 000000ffH
	movsxd	rcx, eax
	mov	rax, QWORD PTR lut_ctx_sign$[rsp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	DWORD PTR val$[rsp], eax
; Line 639
	mov	eax, DWORD PTR val$[rsp]
	sar	eax, 1
	movsxd	rcx, eax
	imul	rcx, 16
	mov	rax, QWORD PTR states$[rsp]
	lea	rax, QWORD PTR [rax+rcx+160]
	mov	QWORD PTR state_ref$[rsp], rax
; Line 640
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rax, QWORD PTR state_ref$[rsp]
	mov	eax, DWORD PTR [rax]
	and	eax, -256				; ffffff00H
	mov	DWORD PTR _p$3346[rsp], eax
	mov	ecx, DWORD PTR _p$3346[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR _p$3346[rsp]
	cmp	DWORD PTR reg_C$[rsp], eax
	jge	$LN23@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3346[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN22@bmi_t1_dec@3
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3437[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3437[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN21@bmi_t1_dec@3
$LN22@bmi_t1_dec@3:
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3436[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3436[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN21@bmi_t1_dec@3:
	mov	eax, DWORD PTR _p$3346[rsp]
	mov	DWORD PTR reg_A$[rsp], eax
$LN20@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN17@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN16@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN15@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN14@bmi_t1_dec@3
$LN15@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN14@bmi_t1_dec@3:
	jmp	SHORT $LN13@bmi_t1_dec@3
$LN16@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN13@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN17@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN20@bmi_t1_dec@3
	jmp	$LN12@bmi_t1_dec@3
$LN23@bmi_t1_dec@3:
	mov	ecx, DWORD PTR _p$3346[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	sub	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jge	$LN11@bmi_t1_dec@3
	mov	eax, DWORD PTR _p$3346[rsp]
	cmp	DWORD PTR reg_A$[rsp], eax
	jge	SHORT $LN10@bmi_t1_dec@3
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, 1
	mov	DWORD PTR sym$[rsp], eax
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3435[rsp]
	add	rsi, 16
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3435[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN9@bmi_t1_dec@3
$LN10@bmi_t1_dec@3:
	mov	rsi, QWORD PTR state_ref$[rsp]
	mov	rsi, QWORD PTR [rsi+8]
	lea	rdi, QWORD PTR $T3434[rsp]
	mov	ecx, 16
	rep movsb
	lea	rsi, QWORD PTR $T3434[rsp]
	mov	rdi, QWORD PTR state_ref$[rsp]
	mov	ecx, 16
	rep movsb
$LN9@bmi_t1_dec@3:
$LN8@bmi_t1_dec@3:
	cmp	DWORD PTR reg_t$[rsp], 0
	jne	$LN5@bmi_t1_dec@3
	cmp	DWORD PTR reg_T$[rsp], 255		; 000000ffH
	jne	SHORT $LN4@bmi_t1_dec@3
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 143				; 0000008fH
	jle	SHORT $LN3@bmi_t1_dec@3
	mov	DWORD PTR reg_t$[rsp], 8
	mov	eax, DWORD PTR reg_S$[rsp]
	add	eax, 1
	mov	DWORD PTR reg_S$[rsp], eax
	jmp	SHORT $LN2@bmi_t1_dec@3
$LN3@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	shl	eax, 1
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 7
$LN2@bmi_t1_dec@3:
	jmp	SHORT $LN1@bmi_t1_dec@3
$LN4@bmi_t1_dec@3:
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR reg_T$[rsp], eax
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	add	rax, 1
	mov	QWORD PTR reg_buf_next$[rsp], rax
	mov	DWORD PTR reg_t$[rsp], 8
$LN1@bmi_t1_dec@3:
	mov	ecx, DWORD PTR reg_T$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	add	eax, ecx
	mov	DWORD PTR reg_C$[rsp], eax
$LN5@bmi_t1_dec@3:
	mov	eax, DWORD PTR reg_A$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_A$[rsp], eax
	mov	eax, DWORD PTR reg_C$[rsp]
	shl	eax, 1
	mov	DWORD PTR reg_C$[rsp], eax
	mov	eax, DWORD PTR reg_t$[rsp]
	sub	eax, 1
	mov	DWORD PTR reg_t$[rsp], eax
	cmp	DWORD PTR reg_A$[rsp], 8388608		; 00800000H
	jl	$LN8@bmi_t1_dec@3
$LN11@bmi_t1_dec@3:
$LN12@bmi_t1_dec@3:
; Line 641
	mov	ecx, DWORD PTR val$[rsp]
	and	ecx, 1
	mov	eax, DWORD PTR sym$[rsp]
	xor	eax, ecx
	mov	DWORD PTR sym$[rsp], eax
; Line 644
	mov	eax, DWORD PTR width$[rsp]
	add	eax, 2
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	edx, DWORD PTR [rax+rcx*4]
	or	edx, 4
	mov	eax, DWORD PTR width$[rsp]
	add	eax, 2
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
; Line 645
	mov	eax, DWORD PTR width$[rsp]
	add	eax, 3
	movsxd	rdx, eax
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 18
	or	ecx, 2
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	edx, DWORD PTR [rax+rdx*4]
	or	edx, ecx
	mov	eax, DWORD PTR width$[rsp]
	add	eax, 3
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
; Line 646
	mov	eax, DWORD PTR width$[rsp]
	add	eax, 4
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	edx, DWORD PTR [rax+rcx*4]
	or	edx, 1
	mov	eax, DWORD PTR width$[rsp]
	add	eax, 4
	movsxd	rcx, eax
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
; Line 648
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax-4]
	or	ecx, 16384				; 00004000H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax-4], ecx
; Line 649
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	ecx, DWORD PTR [rax+4]
	or	ecx, 4096				; 00001000H
	mov	rax, QWORD PTR contextWord$[rsp]
	mov	DWORD PTR [rax+4], ecx
; Line 650
	mov	ecx, DWORD PTR sym$[rsp]
	shl	ecx, 28
	or	ecx, 8192				; 00002000H
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, ecx
	mov	DWORD PTR cword$[rsp], eax
; Line 651
	mov	edx, DWORD PTR sym$[rsp]
	shl	edx, 31
	add	edx, DWORD PTR one_and_half$[rsp]
	movsxd	rcx, DWORD PTR width_by3$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	mov	DWORD PTR [rax+rcx*4], edx
$LN25@bmi_t1_dec@3:
$LN51@bmi_t1_dec@3:
; Line 656
	mov	ecx, DWORD PTR cword$[rsp]
	shl	ecx, 16
	and	ecx, 613416960				; 24900000H
	mov	eax, DWORD PTR cword$[rsp]
	or	eax, ecx
	mov	DWORD PTR cword$[rsp], eax
; Line 657
	mov	eax, DWORD PTR cword$[rsp]
	and	eax, -1226833921			; ffffffffb6dfffffH
	mov	DWORD PTR cword$[rsp], eax
; Line 658
	mov	rcx, QWORD PTR contextWord$[rsp]
	mov	eax, DWORD PTR cword$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 659
	mov	eax, DWORD PTR c$[rsp]
	sub	eax, 1
	mov	DWORD PTR c$[rsp], eax
; Line 660
	mov	rax, QWORD PTR sp$[rsp]
	add	rax, 4
	mov	QWORD PTR sp$[rsp], rax
; Line 661
	mov	rax, QWORD PTR contextWord$[rsp]
	add	rax, 4
	mov	QWORD PTR contextWord$[rsp], rax
$LN278@bmi_t1_dec@3:
; Line 663
	cmp	DWORD PTR c$[rsp], 0
	jg	$LN279@bmi_t1_dec@3
; Line 664
	mov	eax, DWORD PTR num_stripes$[rsp]
	sub	eax, 1
	mov	DWORD PTR num_stripes$[rsp], eax
; Line 665
	mov	rax, QWORD PTR contextWord$[rsp]
	add	rax, 12
	mov	QWORD PTR contextWord$[rsp], rax
; Line 666
	movsxd	rcx, DWORD PTR width_by3$[rsp]
	mov	rax, QWORD PTR sp$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR sp$[rsp], rax
; Line 667
	cmp	DWORD PTR num_stripes$[rsp], 0
	jg	$LN282@bmi_t1_dec@3
; Line 669
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_A$[rsp]
	mov	DWORD PTR [rcx], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_C$[rsp]
	mov	DWORD PTR [rcx+4], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_t$[rsp]
	mov	DWORD PTR [rcx+8], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_T$[rsp]
	mov	DWORD PTR [rcx+12], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	eax, DWORD PTR reg_S$[rsp]
	mov	DWORD PTR [rcx+16], eax
	mov	rcx, QWORD PTR coder$[rsp]
	mov	rax, QWORD PTR reg_buf_next$[rsp]
	mov	QWORD PTR [rcx+24], rax
; Line 670
	add	rsp, 856				; 00000358H
	pop	rdi
	pop	rsi
	ret	0
bmi_t1_decode_pass2_asm64 ENDP
_TEXT	ENDS
END
