; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

include listing.inc

;INCLUDELIB LIBCMT
;INCLUDELIB OLDNAMES

PUBLIC	bmi_t1_decode_pass0_asm64
; File c:\jason\bmi_decoder\decoder\decoder\codec\src\bmi_block_decoder_asm64.cpp
;	COMDAT bmi_t1_decode_pass0_asm64
_TEXT	SEGMENT
$T3508 = 0
$T3509 = 8
tv793 = 16
coder$ = 112
states$ = 120
one_and_half$1$ = 128
p$ = 128
lutContext$ = 136
sp$ = 144
c$1$ = 152
contextWord$ = 152
width$ = 160
num_stripes$ = 168
lut_ctx_sign_asm64$ = 176
bmi_t1_decode_pass0_asm64 PROC				; COMDAT
; Line 117
$LN326:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 40					; 00000028H
; Line 119
	mov	edi, DWORD PTR [rcx]
	mov	ebx, DWORD PTR [rcx+4]
	mov	r10d, DWORD PTR [rcx+8]
	mov	r11d, DWORD PTR [rcx+12]
	mov	r12d, DWORD PTR [rcx+16]
; Line 126
	mov	r13, QWORD PTR contextWord$[rsp]
	mov	r15, QWORD PTR sp$[rsp]
	mov	eax, 1
	mov	rbp, r9
	mov	r9, QWORD PTR [rcx+24]
	mov	ecx, r8d
	mov	rsi, rdx
	mov	edx, DWORD PTR width$[rsp]
	shl	eax, cl
	mov	ecx, eax
	sar	ecx, 1
	add	ecx, eax
	lea	eax, DWORD PTR [rdx+rdx]
	mov	DWORD PTR one_and_half$1$[rsp], ecx
	lea	ecx, DWORD PTR [rax+rdx]
	cdqe
	mov	QWORD PTR $T3508[rsp], rax
	movsxd	rax, ecx
	mov	QWORD PTR $T3509[rsp], rax
	shl	rax, 2
	mov	QWORD PTR tv793[rsp], rax
	npad	11
$LL205@bmi_t1_dec:
; Line 133
	mov	eax, edx
	mov	DWORD PTR c$1$[rsp], edx
	npad	7
$LL202@bmi_t1_dec:
; Line 136
	mov	r14d, DWORD PTR [r13]
	test	r14d, r14d
	jne	SHORT $LN199@bmi_t1_dec
; Line 139
	add	r13, 12
	cmp	DWORD PTR [r13], r14d
	jne	SHORT $LN197@bmi_t1_dec
	npad	13
$LL198@bmi_t1_dec:
	add	r13, 12
; Line 141
	sub	eax, 3
; Line 142
	add	r15, 12
	cmp	DWORD PTR [r13], 0
	je	SHORT $LL198@bmi_t1_dec
$LN197@bmi_t1_dec:
; Line 144
	sub	r13, 8
; Line 145
	dec	eax
; Line 146
	add	r15, 4
; Line 147
	jmp	$LN292@bmi_t1_dec
$LN199@bmi_t1_dec:
; Line 154
	test	r14d, 495				; 000001efH
	je	$LN171@bmi_t1_dec
	test	r14d, 524304				; 00080010H
	jne	$LN171@bmi_t1_dec
; Line 157
	mov	eax, r14d
	and	eax, 495				; 000001efH
	movzx	edx, BYTE PTR [rax+rbp]
	shl	rdx, 4
	add	rdx, rsi
; Line 158
	mov	r8d, DWORD PTR [rdx]
	mov	esi, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	esi, 1
	cmp	ebx, r8d
	jge	SHORT $LN195@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN194@bmi_t1_dec
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN293@bmi_t1_dec
$LN194@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN293@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
$LL192@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN189@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN188@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN187@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN294@bmi_t1_dec
$LN187@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN185@bmi_t1_dec
$LN188@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN294@bmi_t1_dec:
	mov	r10d, 8
$LN185@bmi_t1_dec:
	add	ebx, r11d
$LN189@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL192@bmi_t1_dec
	jmp	SHORT $LN178@bmi_t1_dec
$LN195@bmi_t1_dec:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN178@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN182@bmi_t1_dec
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN295@bmi_t1_dec
$LN182@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN295@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
$LL180@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN177@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN176@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN175@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN296@bmi_t1_dec
$LN175@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN173@bmi_t1_dec
$LN176@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN296@bmi_t1_dec:
	mov	r10d, 8
$LN173@bmi_t1_dec:
	add	ebx, r11d
$LN177@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL180@bmi_t1_dec
$LN178@bmi_t1_dec:
; Line 159
	test	esi, esi
	jne	SHORT $LN172@bmi_t1_dec
; Line 161
	bts	r14d, 21
; Line 163
	jmp	$LN297@bmi_t1_dec
$LN172@bmi_t1_dec:
; Line 177
	mov	eax, DWORD PTR [r13-4]
	mov	ecx, r14d
	sar	ecx, 1
	and	eax, 524304				; 00080010H
	and	ecx, 131072				; 00020000H
	or	ecx, eax
	mov	eax, DWORD PTR [r13+4]
	and	eax, 524304				; 00080010H
	sar	ecx, 1
	add	eax, eax
	or	ecx, eax
	mov	eax, r14d
	and	eax, 4194434				; 00400082H
	or	eax, ecx
; Line 180
	cdqe
	mov	rcx, rax
	sar	rcx, 14
	or	rcx, rax
	sar	rcx, 1
	movzx	eax, cl
	mov	rcx, QWORD PTR lut_ctx_sign_asm64$[rsp]
	movzx	ebp, BYTE PTR [rax+rcx]
; Line 181
	mov	rdx, rbp
	sar	rdx, 1
	add	rdx, 10
	shl	rdx, 4
	add	rdx, QWORD PTR states$[rsp]
; Line 182
	mov	r8d, DWORD PTR [rdx]
	mov	esi, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	esi, 1
	cmp	ebx, r8d
	jge	SHORT $LN170@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN169@bmi_t1_dec
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN298@bmi_t1_dec
$LN169@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN298@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
	npad	4
$LL167@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN164@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN163@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN162@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN299@bmi_t1_dec
$LN162@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN160@bmi_t1_dec
$LN163@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN299@bmi_t1_dec:
	mov	r10d, 8
$LN160@bmi_t1_dec:
	add	ebx, r11d
$LN164@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL167@bmi_t1_dec
	jmp	SHORT $LN153@bmi_t1_dec
$LN170@bmi_t1_dec:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN153@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN157@bmi_t1_dec
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN300@bmi_t1_dec
$LN157@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN300@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
$LL155@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN152@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN151@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN150@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN301@bmi_t1_dec
$LN150@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN148@bmi_t1_dec
$LN151@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN301@bmi_t1_dec:
	mov	r10d, 8
$LN148@bmi_t1_dec:
	add	ebx, r11d
$LN152@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL155@bmi_t1_dec
$LN153@bmi_t1_dec:
; Line 189
	movsxd	rdx, DWORD PTR width$[rsp]
	and	ebp, 1
	mov	rcx, r13
	xor	esi, ebp
	mov	rbp, QWORD PTR lutContext$[rsp]
	lea	rax, QWORD PTR [rdx*4+16]
	sub	rcx, rax
; Line 190
	lea	rax, QWORD PTR [rdx*4+12]
	or	DWORD PTR [rcx], 131072			; 00020000H
	mov	rcx, r13
	sub	rcx, rax
	mov	eax, esi
	shl	eax, 31
	bts	eax, 16
	or	DWORD PTR [rcx], eax
; Line 191
	lea	rax, QWORD PTR [rdx*4+8]
	mov	rcx, r13
	sub	rcx, rax
; Line 195
	mov	eax, esi
; Line 196
	neg	esi
	or	DWORD PTR [rcx], 32768			; 00008000H
	or	DWORD PTR [r13-4], 32			; 00000020H
	or	DWORD PTR [r13+4], 8
	shl	eax, 19
	shl	esi, 31
	or	eax, 2097168				; 00200010H
	or	r14d, eax
	add	esi, DWORD PTR one_and_half$1$[rsp]
	mov	DWORD PTR [r15], esi
$LN297@bmi_t1_dec:
	mov	rsi, QWORD PTR states$[rsp]
$LN171@bmi_t1_dec:
; Line 200
	test	r14d, 3960				; 00000f78H
	je	$LN122@bmi_t1_dec
	test	r14d, 4194432				; 00400080H
	jne	$LN122@bmi_t1_dec
; Line 203
	mov	eax, r14d
	sar	rax, 3
	and	eax, 495				; 000001efH
	movzx	edx, BYTE PTR [rax+rbp]
	shl	rdx, 4
	add	rdx, rsi
; Line 204
	mov	r8d, DWORD PTR [rdx]
	mov	esi, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	esi, 1
	cmp	ebx, r8d
	jge	SHORT $LN146@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN145@bmi_t1_dec
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN302@bmi_t1_dec
$LN145@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN302@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
$LL143@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN140@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN139@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN138@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN303@bmi_t1_dec
$LN138@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN136@bmi_t1_dec
$LN139@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN303@bmi_t1_dec:
	mov	r10d, 8
$LN136@bmi_t1_dec:
	add	ebx, r11d
$LN140@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL143@bmi_t1_dec
	jmp	SHORT $LN129@bmi_t1_dec
$LN146@bmi_t1_dec:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN129@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN133@bmi_t1_dec
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN304@bmi_t1_dec
$LN133@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN304@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
$LL131@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN128@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN127@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN126@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN305@bmi_t1_dec
$LN126@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN124@bmi_t1_dec
$LN127@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN305@bmi_t1_dec:
	mov	r10d, 8
$LN124@bmi_t1_dec:
	add	ebx, r11d
$LN128@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL131@bmi_t1_dec
$LN129@bmi_t1_dec:
; Line 205
	test	esi, esi
	jne	SHORT $LN123@bmi_t1_dec
; Line 207
	bts	r14d, 24
; Line 209
	jmp	$LN122@bmi_t1_dec
$LN123@bmi_t1_dec:
; Line 217
	mov	ecx, DWORD PTR [r13+4]
	mov	eax, DWORD PTR [r13-4]
	and	ecx, 4194432				; 00400080H
	sar	eax, 1
	add	ecx, ecx
	and	eax, 2097216				; 00200040H
	or	ecx, eax
	mov	eax, r14d
	and	eax, 34079760				; 02080410H
	or	eax, ecx
; Line 220
	cdqe
	mov	rcx, rax
	sar	rcx, 14
	or	rcx, rax
	sar	rcx, 4
	movzx	eax, cl
	mov	rcx, QWORD PTR lut_ctx_sign_asm64$[rsp]
	movzx	ebp, BYTE PTR [rax+rcx]
; Line 221
	mov	rdx, rbp
	sar	rdx, 1
	add	rdx, 10
	shl	rdx, 4
	add	rdx, QWORD PTR states$[rsp]
; Line 222
	mov	r8d, DWORD PTR [rdx]
	mov	esi, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	esi, 1
	cmp	ebx, r8d
	jge	SHORT $LN121@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN120@bmi_t1_dec
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN306@bmi_t1_dec
$LN120@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN306@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
$LL118@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN115@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN114@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN113@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN307@bmi_t1_dec
$LN113@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN111@bmi_t1_dec
$LN114@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN307@bmi_t1_dec:
	mov	r10d, 8
$LN111@bmi_t1_dec:
	add	ebx, r11d
$LN115@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL118@bmi_t1_dec
	jmp	SHORT $LN104@bmi_t1_dec
$LN121@bmi_t1_dec:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN104@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN108@bmi_t1_dec
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN308@bmi_t1_dec
$LN108@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN308@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
$LL106@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN103@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN102@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN101@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN309@bmi_t1_dec
$LN101@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN99@bmi_t1_dec
$LN102@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN309@bmi_t1_dec:
	mov	r10d, 8
$LN99@bmi_t1_dec:
	add	ebx, r11d
$LN103@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL106@bmi_t1_dec
$LN104@bmi_t1_dec:
; Line 226
	or	DWORD PTR [r13-4], 256			; 00000100H
; Line 227
	or	DWORD PTR [r13+4], 64			; 00000040H
	and	ebp, 1
	xor	esi, ebp
; Line 229
	mov	eax, esi
; Line 230
	neg	esi
	shl	eax, 22
	shl	esi, 31
	or	eax, 16777344				; 01000080H
	or	r14d, eax
	movsxd	rax, DWORD PTR width$[rsp]
	add	esi, DWORD PTR one_and_half$1$[rsp]
	mov	DWORD PTR [r15+rax*4], esi
$LN122@bmi_t1_dec:
; Line 234
	test	r14d, 31680				; 00007bc0H
	je	$LN274@bmi_t1_dec
; Line 237
	mov	rbp, QWORD PTR states$[rsp]
	test	r14d, 33555456				; 02000400H
	jne	$LN73@bmi_t1_dec
	mov	rcx, QWORD PTR lutContext$[rsp]
	mov	eax, r14d
	sar	rax, 6
	and	eax, 495				; 000001efH
	movzx	edx, BYTE PTR [rax+rcx]
	shl	rdx, 4
	add	rdx, rbp
; Line 238
	mov	r8d, DWORD PTR [rdx]
	mov	esi, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	esi, 1
	cmp	ebx, r8d
	jge	SHORT $LN97@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN96@bmi_t1_dec
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN310@bmi_t1_dec
$LN96@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN310@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
$LL94@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN91@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN90@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN89@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN311@bmi_t1_dec
$LN89@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN87@bmi_t1_dec
$LN90@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN311@bmi_t1_dec:
	mov	r10d, 8
$LN87@bmi_t1_dec:
	add	ebx, r11d
$LN91@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL94@bmi_t1_dec
	jmp	SHORT $LN80@bmi_t1_dec
$LN97@bmi_t1_dec:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN80@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN84@bmi_t1_dec
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN312@bmi_t1_dec
$LN84@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN312@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
$LL82@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN79@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN78@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN77@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN313@bmi_t1_dec
$LN77@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN75@bmi_t1_dec
$LN78@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN313@bmi_t1_dec:
	mov	r10d, 8
$LN75@bmi_t1_dec:
	add	ebx, r11d
$LN79@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL82@bmi_t1_dec
$LN80@bmi_t1_dec:
; Line 239
	test	esi, esi
	jne	SHORT $LN74@bmi_t1_dec
; Line 241
	bts	r14d, 27
; Line 243
	jmp	$LN73@bmi_t1_dec
$LN74@bmi_t1_dec:
; Line 251
	mov	ecx, DWORD PTR [r13+4]
	mov	eax, DWORD PTR [r13-4]
	and	ecx, 33555456				; 02000400H
	sar	eax, 1
	add	ecx, ecx
	and	eax, 16777728				; 01000200H
	or	ecx, eax
	mov	eax, r14d
	and	eax, 272638080				; 10402080H
	or	eax, ecx
; Line 254
	cdqe
	mov	rcx, rax
	sar	rcx, 14
	or	rcx, rax
	sar	rcx, 7
	movzx	eax, cl
	mov	rcx, QWORD PTR lut_ctx_sign_asm64$[rsp]
	movzx	ebp, BYTE PTR [rax+rcx]
; Line 255
	mov	rdx, rbp
	sar	rdx, 1
	add	rdx, 10
	shl	rdx, 4
	add	rdx, QWORD PTR states$[rsp]
; Line 256
	mov	r8d, DWORD PTR [rdx]
	mov	esi, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	esi, 1
	cmp	ebx, r8d
	jge	SHORT $LN72@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN71@bmi_t1_dec
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN314@bmi_t1_dec
$LN71@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN314@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
$LL69@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN66@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN65@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN64@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN315@bmi_t1_dec
$LN64@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN62@bmi_t1_dec
$LN65@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN315@bmi_t1_dec:
	mov	r10d, 8
$LN62@bmi_t1_dec:
	add	ebx, r11d
$LN66@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL69@bmi_t1_dec
	jmp	SHORT $LN55@bmi_t1_dec
$LN72@bmi_t1_dec:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN55@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN59@bmi_t1_dec
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN316@bmi_t1_dec
$LN59@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN316@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
$LL57@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN54@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN53@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN52@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN317@bmi_t1_dec
$LN52@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN50@bmi_t1_dec
$LN53@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN317@bmi_t1_dec:
	mov	r10d, 8
$LN50@bmi_t1_dec:
	add	ebx, r11d
$LN54@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL57@bmi_t1_dec
$LN55@bmi_t1_dec:
; Line 260
	or	DWORD PTR [r13-4], 2048			; 00000800H
; Line 261
	or	DWORD PTR [r13+4], 512			; 00000200H
	and	ebp, 1
	xor	esi, ebp
; Line 263
	mov	eax, esi
; Line 264
	neg	esi
	shl	eax, 25
	shl	esi, 31
	or	eax, 134218752				; 08000400H
	or	r14d, eax
	mov	rax, QWORD PTR $T3508[rsp]
	add	esi, DWORD PTR one_and_half$1$[rsp]
	mov	DWORD PTR [r15+rax*4], esi
$LN274@bmi_t1_dec:
; Line 310
	mov	rbp, QWORD PTR states$[rsp]
$LN73@bmi_t1_dec:
; Line 268
	test	r14d, 253440				; 0003de00H
	je	$LN276@bmi_t1_dec
	test	r14d, 268443648				; 10002000H
	jne	$LN276@bmi_t1_dec
; Line 271
	mov	rcx, QWORD PTR lutContext$[rsp]
	mov	eax, r14d
	sar	rax, 9
	and	eax, 495				; 000001efH
	movzx	edx, BYTE PTR [rax+rcx]
	shl	rdx, 4
	add	rdx, rbp
; Line 272
	mov	r8d, DWORD PTR [rdx]
	mov	esi, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	esi, 1
	cmp	ebx, r8d
	jge	SHORT $LN48@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN47@bmi_t1_dec
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN318@bmi_t1_dec
$LN47@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN318@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
$LL45@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN42@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN41@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN40@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN319@bmi_t1_dec
$LN40@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN38@bmi_t1_dec
$LN41@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN319@bmi_t1_dec:
	mov	r10d, 8
$LN38@bmi_t1_dec:
	add	ebx, r11d
$LN42@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL45@bmi_t1_dec
	jmp	$LN31@bmi_t1_dec
$LN48@bmi_t1_dec:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN31@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN35@bmi_t1_dec
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN320@bmi_t1_dec
$LN35@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN320@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
	npad	6
$LL33@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN30@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN29@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN28@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN321@bmi_t1_dec
$LN28@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN26@bmi_t1_dec
$LN29@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN321@bmi_t1_dec:
	mov	r10d, 8
$LN26@bmi_t1_dec:
	add	ebx, r11d
$LN30@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL33@bmi_t1_dec
$LN31@bmi_t1_dec:
; Line 273
	test	esi, esi
	jne	$LN25@bmi_t1_dec
; Line 275
	bts	r14d, 30
$LN276@bmi_t1_dec:
; Line 125
	mov	edx, DWORD PTR width$[rsp]
$LN24@bmi_t1_dec:
; Line 310
	mov	eax, DWORD PTR c$1$[rsp]
	mov	rsi, QWORD PTR states$[rsp]
	mov	rbp, QWORD PTR lutContext$[rsp]
	dec	eax
	mov	DWORD PTR [r13], r14d
; Line 311
	add	r15, 4
; Line 312
	add	r13, 4
$LN292@bmi_t1_dec:
	mov	DWORD PTR c$1$[rsp], eax
; Line 313
	test	eax, eax
	jg	$LL202@bmi_t1_dec
; Line 314
	mov	eax, DWORD PTR num_stripes$[rsp]
; Line 316
	add	r15, QWORD PTR tv793[rsp]
	add	r13, 12
	dec	eax
	mov	DWORD PTR num_stripes$[rsp], eax
; Line 317
	test	eax, eax
	jg	$LL205@bmi_t1_dec
; Line 319
	mov	rax, QWORD PTR coder$[rsp]
	mov	DWORD PTR [rax], edi
	mov	DWORD PTR [rax+4], ebx
	mov	DWORD PTR [rax+8], r10d
	mov	DWORD PTR [rax+12], r11d
	mov	DWORD PTR [rax+16], r12d
	mov	QWORD PTR [rax+24], r9
; Line 320
	add	rsp, 40					; 00000028H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN25@bmi_t1_dec:
; Line 286
	mov	ecx, DWORD PTR [r13+4]
	mov	eax, DWORD PTR [r13-4]
	and	ecx, 268443648				; 10002000H
	sar	eax, 1
	add	ecx, ecx
	and	eax, 134221824				; 08001000H
	or	ecx, eax
	mov	eax, r14d
	and	eax, -2113862656			; ffffffff82010400H
	or	eax, ecx
; Line 291
	cdqe
	mov	rcx, rax
	sar	rcx, 14
	or	rcx, rax
	sar	rcx, 10
	movzx	eax, cl
	mov	rcx, QWORD PTR lut_ctx_sign_asm64$[rsp]
	movzx	ebp, BYTE PTR [rax+rcx]
; Line 292
	mov	rdx, rbp
	sar	rdx, 1
	add	rdx, 10
	shl	rdx, 4
	add	rdx, QWORD PTR states$[rsp]
; Line 293
	mov	r8d, DWORD PTR [rdx]
	mov	esi, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	esi, 1
	cmp	ebx, r8d
	jge	SHORT $LN23@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN22@bmi_t1_dec
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN322@bmi_t1_dec
$LN22@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN322@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
$LL20@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN17@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN16@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN15@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN323@bmi_t1_dec
$LN15@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN13@bmi_t1_dec
$LN16@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN323@bmi_t1_dec:
	mov	r10d, 8
$LN13@bmi_t1_dec:
	add	ebx, r11d
$LN17@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL20@bmi_t1_dec
	jmp	SHORT $LN6@bmi_t1_dec
$LN23@bmi_t1_dec:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN6@bmi_t1_dec
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN10@bmi_t1_dec
	mov	rax, QWORD PTR [rcx+16]
	xor	esi, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN324@bmi_t1_dec
$LN10@bmi_t1_dec:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN324@bmi_t1_dec:
	mov	QWORD PTR [rdx+8], rax
$LL8@bmi_t1_dec:
	test	r10d, r10d
	jne	SHORT $LN5@bmi_t1_dec
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN4@bmi_t1_dec
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN3@bmi_t1_dec
	inc	r12d
	jmp	SHORT $LN325@bmi_t1_dec
$LN3@bmi_t1_dec:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN1@bmi_t1_dec
$LN4@bmi_t1_dec:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN325@bmi_t1_dec:
	mov	r10d, 8
$LN1@bmi_t1_dec:
	add	ebx, r11d
$LN5@bmi_t1_dec:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL8@bmi_t1_dec
$LN6@bmi_t1_dec:
; Line 297
	movsxd	rdx, DWORD PTR width$[rsp]
	and	ebp, 1
	or	DWORD PTR [r13+rdx*4+8], 4
; Line 299
	or	DWORD PTR [r13+rdx*4+16], 1
	xor	esi, ebp
	mov	eax, esi
	shl	eax, 18
	or	eax, 2
	or	DWORD PTR [r13+rdx*4+12], eax
; Line 301
	or	DWORD PTR [r13-4], 16384		; 00004000H
; Line 302
	or	DWORD PTR [r13+4], 4096			; 00001000H
; Line 303
	mov	eax, esi
; Line 304
	neg	esi
	shl	eax, 28
	shl	esi, 31
	or	eax, 1073750016				; 40002000H
	or	r14d, eax
	mov	rax, QWORD PTR $T3509[rsp]
	add	esi, DWORD PTR one_and_half$1$[rsp]
	mov	DWORD PTR [r15+rax*4], esi
	jmp	$LN24@bmi_t1_dec
bmi_t1_decode_pass0_asm64 ENDP
_TEXT	ENDS




PUBLIC	bmi_t1_decode_pass1_asm64

;	COMDAT bmi_t1_decode_pass1_asm64
_TEXT	SEGMENT
half_lsb$1$ = 0
$T3639 = 8
$T3638 = 16
tv316 = 24
coder$ = 112
states$ = 120
p$ = 128
sp$ = 136
c$1$ = 144
contextWord$ = 144
width$ = 152
num_stripes$ = 160
bmi_t1_decode_pass1_asm64 PROC				; COMDAT
; Line 326
$LN181:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 40					; 00000028H
; Line 329
	mov	r12d, DWORD PTR [rcx]
	mov	ebp, DWORD PTR [rcx+4]
	mov	r10d, DWORD PTR [rcx+8]
	mov	r11d, DWORD PTR [rcx+12]
	mov	r13d, DWORD PTR [rcx+16]
; Line 336
	mov	r15, QWORD PTR contextWord$[rsp]
	mov	eax, 1
	mov	rbx, rdx
	mov	edx, DWORD PTR width$[rsp]
; Line 338
	add	rbx, 240				; 000000f0H
	mov	rsi, r9
	mov	r9, QWORD PTR [rcx+24]
	mov	ecx, r8d
	mov	QWORD PTR states$[rsp], rbx
	shl	eax, cl
	sar	eax, 1
	mov	DWORD PTR half_lsb$1$[rsp], eax
	lea	eax, DWORD PTR [rdx+rdx]
	lea	ecx, DWORD PTR [rax+rdx]
	cdqe
	mov	QWORD PTR $T3639[rsp], rax
	movsxd	rax, ecx
	mov	QWORD PTR $T3638[rsp], rax
	shl	rax, 2
	mov	QWORD PTR tv316[rsp], rax
$LL118@bmi_t1_dec@2:
; Line 343
	mov	eax, edx
	mov	DWORD PTR c$1$[rsp], edx
	npad	4
$LL115@bmi_t1_dec@2:
; Line 347
	mov	r14d, DWORD PTR [r15]
	test	r14d, 613416960				; 24900000H
	jne	SHORT $LN112@bmi_t1_dec@2
; Line 349
	add	r15, 8
	cmp	DWORD PTR [r15], 0
	jne	SHORT $LN110@bmi_t1_dec@2
	npad	10
$LL111@bmi_t1_dec@2:
	add	r15, 8
; Line 351
	sub	eax, 2
; Line 352
	add	rsi, 8
	cmp	DWORD PTR [r15], 0
	je	SHORT $LL111@bmi_t1_dec@2
$LN110@bmi_t1_dec@2:
; Line 354
	sub	r15, 4
; Line 355
	dec	eax
; Line 356
	add	rsi, 4
; Line 357
	jmp	$LN164@bmi_t1_dec@2
$LN112@bmi_t1_dec@2:
; Line 362
	mov	eax, r14d
	and	eax, 1048592				; 00100010H
	cmp	eax, 1048592				; 00100010H
	jne	$LN154@bmi_t1_dec@2
; Line 365
	mov	edi, DWORD PTR [rsi]
; Line 366
	mov	ecx, r8d
; Line 367
	mov	rdx, rbx
	mov	eax, edi
	btr	eax, 31
	sar	eax, cl
; Line 368
	cmp	eax, 4
	jge	SHORT $LN107@bmi_t1_dec@2
; Line 370
	test	r14d, 495				; 000001efH
	je	SHORT $LN105@bmi_t1_dec@2
; Line 371
	lea	rdx, QWORD PTR [rbx+16]
; Line 373
	jmp	SHORT $LN105@bmi_t1_dec@2
$LN107@bmi_t1_dec@2:
; Line 375
	lea	rdx, QWORD PTR [rbx+32]
$LN105@bmi_t1_dec@2:
; Line 377
	mov	r8d, DWORD PTR [rdx]
	mov	ebx, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	r12d, r8d
	and	ebx, 1
	cmp	ebp, r8d
	jge	$LN104@bmi_t1_dec@2
	cmp	r12d, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN103@bmi_t1_dec@2
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN165@bmi_t1_dec@2
$LN103@bmi_t1_dec@2:
	mov	rax, QWORD PTR [rcx+16]
	xor	ebx, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN165@bmi_t1_dec@2:
	mov	QWORD PTR [rdx+8], rax
	mov	r12d, r8d
$LL101@bmi_t1_dec@2:
	test	r10d, r10d
	jne	SHORT $LN98@bmi_t1_dec@2
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN97@bmi_t1_dec@2
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN96@bmi_t1_dec@2
	inc	r13d
	jmp	SHORT $LN166@bmi_t1_dec@2
$LN96@bmi_t1_dec@2:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN94@bmi_t1_dec@2
$LN97@bmi_t1_dec@2:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN166@bmi_t1_dec@2:
	mov	r10d, 8
$LN94@bmi_t1_dec@2:
	add	ebp, r11d
$LN98@bmi_t1_dec@2:
	add	r12d, r12d
	add	ebp, ebp
	dec	r10d
	cmp	r12d, 8388608				; 00800000H
	jl	SHORT $LL101@bmi_t1_dec@2
	jmp	$LN87@bmi_t1_dec@2
$LN104@bmi_t1_dec@2:
	sub	ebp, r8d
	cmp	r12d, 8388608				; 00800000H
	jge	SHORT $LN87@bmi_t1_dec@2
	cmp	r12d, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN91@bmi_t1_dec@2
	mov	rax, QWORD PTR [rcx+16]
	xor	ebx, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN167@bmi_t1_dec@2
$LN91@bmi_t1_dec@2:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN167@bmi_t1_dec@2:
	mov	QWORD PTR [rdx+8], rax
$LL89@bmi_t1_dec@2:
	test	r10d, r10d
	jne	SHORT $LN86@bmi_t1_dec@2
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN85@bmi_t1_dec@2
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN84@bmi_t1_dec@2
	inc	r13d
	jmp	SHORT $LN168@bmi_t1_dec@2
$LN84@bmi_t1_dec@2:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN82@bmi_t1_dec@2
$LN85@bmi_t1_dec@2:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN168@bmi_t1_dec@2:
	mov	r10d, 8
$LN82@bmi_t1_dec@2:
	add	ebp, r11d
$LN86@bmi_t1_dec@2:
	add	r12d, r12d
	add	ebp, ebp
	dec	r10d
	cmp	r12d, 8388608				; 00800000H
	jl	SHORT $LL89@bmi_t1_dec@2
$LN87@bmi_t1_dec@2:
; Line 378
	mov	ecx, DWORD PTR p$[rsp]
	mov	edx, DWORD PTR width$[rsp]
	mov	eax, 1
	sub	eax, ebx
	mov	rbx, QWORD PTR states$[rsp]
	shl	eax, cl
	xor	eax, edi
; Line 379
	or	eax, DWORD PTR half_lsb$1$[rsp]
; Line 380
	mov	DWORD PTR [rsi], eax
	jmp	SHORT $LN108@bmi_t1_dec@2
$LN154@bmi_t1_dec@2:
; Line 338
	mov	ecx, DWORD PTR p$[rsp]
$LN108@bmi_t1_dec@2:
; Line 382
	mov	eax, r14d
	and	eax, 8388736				; 00800080H
	cmp	eax, 8388736				; 00800080H
	jne	$LN156@bmi_t1_dec@2
; Line 385
	movsxd	rdi, edx
; Line 387
	mov	r8, rbx
	mov	esi, DWORD PTR [rsi+rdi*4]
	mov	eax, esi
	btr	eax, 31
	sar	eax, cl
; Line 388
	cmp	eax, 4
	jge	SHORT $LN80@bmi_t1_dec@2
; Line 390
	test	r14d, 3960				; 00000f78H
	je	SHORT $LN78@bmi_t1_dec@2
; Line 391
	lea	r8, QWORD PTR [rbx+16]
; Line 393
	jmp	SHORT $LN78@bmi_t1_dec@2
$LN80@bmi_t1_dec@2:
; Line 395
	lea	r8, QWORD PTR [rbx+32]
$LN78@bmi_t1_dec@2:
; Line 397
	mov	edx, DWORD PTR [r8]
	mov	ebx, edx
	and	edx, -256				; ffffffffffffff00H
	sub	r12d, edx
	and	ebx, 1
	cmp	ebp, edx
	jge	$LN77@bmi_t1_dec@2
	cmp	r12d, edx
	mov	rcx, QWORD PTR [r8+8]
	jge	SHORT $LN76@bmi_t1_dec@2
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN169@bmi_t1_dec@2
$LN76@bmi_t1_dec@2:
	mov	rax, QWORD PTR [rcx+16]
	xor	ebx, 1
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+24]
$LN169@bmi_t1_dec@2:
	mov	QWORD PTR [r8+8], rax
	mov	r12d, edx
$LL74@bmi_t1_dec@2:
	test	r10d, r10d
	jne	SHORT $LN71@bmi_t1_dec@2
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN70@bmi_t1_dec@2
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN69@bmi_t1_dec@2
	inc	r13d
	jmp	SHORT $LN170@bmi_t1_dec@2
$LN69@bmi_t1_dec@2:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN67@bmi_t1_dec@2
$LN70@bmi_t1_dec@2:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN170@bmi_t1_dec@2:
	mov	r10d, 8
$LN67@bmi_t1_dec@2:
	add	ebp, r11d
$LN71@bmi_t1_dec@2:
	add	r12d, r12d
	add	ebp, ebp
	dec	r10d
	cmp	r12d, 8388608				; 00800000H
	jl	SHORT $LL74@bmi_t1_dec@2
	jmp	$LN60@bmi_t1_dec@2
$LN77@bmi_t1_dec@2:
	sub	ebp, edx
	cmp	r12d, 8388608				; 00800000H
	jge	SHORT $LN60@bmi_t1_dec@2
	cmp	r12d, edx
	mov	rcx, QWORD PTR [r8+8]
	jge	SHORT $LN64@bmi_t1_dec@2
	mov	rax, QWORD PTR [rcx+16]
	xor	ebx, 1
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN171@bmi_t1_dec@2
$LN64@bmi_t1_dec@2:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+8]
$LN171@bmi_t1_dec@2:
	mov	QWORD PTR [r8+8], rax
$LL62@bmi_t1_dec@2:
	test	r10d, r10d
	jne	SHORT $LN59@bmi_t1_dec@2
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN58@bmi_t1_dec@2
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN57@bmi_t1_dec@2
	inc	r13d
	jmp	SHORT $LN172@bmi_t1_dec@2
$LN57@bmi_t1_dec@2:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN55@bmi_t1_dec@2
$LN58@bmi_t1_dec@2:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN172@bmi_t1_dec@2:
	mov	r10d, 8
$LN55@bmi_t1_dec@2:
	add	ebp, r11d
$LN59@bmi_t1_dec@2:
	add	r12d, r12d
	add	ebp, ebp
	dec	r10d
	cmp	r12d, 8388608				; 00800000H
	jl	SHORT $LL62@bmi_t1_dec@2
$LN60@bmi_t1_dec@2:
; Line 398
	mov	eax, 1
	sub	eax, ebx
	mov	ebx, DWORD PTR p$[rsp]
	mov	ecx, ebx
	shl	eax, cl
	xor	eax, esi
; Line 400
	mov	rsi, QWORD PTR sp$[rsp]
	or	eax, DWORD PTR half_lsb$1$[rsp]
	mov	DWORD PTR [rsi+rdi*4], eax
	jmp	SHORT $LN81@bmi_t1_dec@2
$LN156@bmi_t1_dec@2:
; Line 418
	mov	ebx, DWORD PTR p$[rsp]
$LN81@bmi_t1_dec@2:
; Line 402
	mov	eax, r14d
	and	eax, 67109888				; 04000400H
	cmp	eax, 67109888				; 04000400H
	jne	$LN54@bmi_t1_dec@2
; Line 405
	mov	rax, QWORD PTR $T3639[rsp]
; Line 407
	mov	rdx, QWORD PTR states$[rsp]
	mov	ecx, ebx
	mov	edi, DWORD PTR [rsi+rax*4]
	mov	r8, rdx
	mov	eax, edi
	btr	eax, 31
	sar	eax, cl
; Line 408
	cmp	eax, 4
	jge	SHORT $LN53@bmi_t1_dec@2
; Line 410
	test	r14d, 31680				; 00007bc0H
	je	SHORT $LN51@bmi_t1_dec@2
; Line 411
	lea	r8, QWORD PTR [rdx+16]
; Line 413
	jmp	SHORT $LN51@bmi_t1_dec@2
$LN53@bmi_t1_dec@2:
; Line 415
	lea	r8, QWORD PTR [rdx+32]
$LN51@bmi_t1_dec@2:
; Line 417
	mov	edx, DWORD PTR [r8]
	mov	ebx, edx
	and	edx, -256				; ffffffffffffff00H
	sub	r12d, edx
	and	ebx, 1
	cmp	ebp, edx
	jge	$LN50@bmi_t1_dec@2
	cmp	r12d, edx
	mov	rcx, QWORD PTR [r8+8]
	jge	SHORT $LN49@bmi_t1_dec@2
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN173@bmi_t1_dec@2
$LN49@bmi_t1_dec@2:
	mov	rax, QWORD PTR [rcx+16]
	xor	ebx, 1
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+24]
$LN173@bmi_t1_dec@2:
	mov	QWORD PTR [r8+8], rax
	mov	r12d, edx
$LL47@bmi_t1_dec@2:
	test	r10d, r10d
	jne	SHORT $LN44@bmi_t1_dec@2
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN43@bmi_t1_dec@2
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN42@bmi_t1_dec@2
	inc	r13d
	jmp	SHORT $LN174@bmi_t1_dec@2
$LN42@bmi_t1_dec@2:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN40@bmi_t1_dec@2
$LN43@bmi_t1_dec@2:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN174@bmi_t1_dec@2:
	mov	r10d, 8
$LN40@bmi_t1_dec@2:
	add	ebp, r11d
$LN44@bmi_t1_dec@2:
	add	r12d, r12d
	add	ebp, ebp
	dec	r10d
	cmp	r12d, 8388608				; 00800000H
	jl	SHORT $LL47@bmi_t1_dec@2
	jmp	$LN33@bmi_t1_dec@2
$LN50@bmi_t1_dec@2:
	sub	ebp, edx
	cmp	r12d, 8388608				; 00800000H
	jge	SHORT $LN33@bmi_t1_dec@2
	cmp	r12d, edx
	mov	rcx, QWORD PTR [r8+8]
	jge	SHORT $LN37@bmi_t1_dec@2
	mov	rax, QWORD PTR [rcx+16]
	xor	ebx, 1
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN175@bmi_t1_dec@2
$LN37@bmi_t1_dec@2:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+8]
$LN175@bmi_t1_dec@2:
	mov	QWORD PTR [r8+8], rax
	npad	5
$LL35@bmi_t1_dec@2:
	test	r10d, r10d
	jne	SHORT $LN32@bmi_t1_dec@2
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN31@bmi_t1_dec@2
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN30@bmi_t1_dec@2
	inc	r13d
	jmp	SHORT $LN176@bmi_t1_dec@2
$LN30@bmi_t1_dec@2:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN28@bmi_t1_dec@2
$LN31@bmi_t1_dec@2:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN176@bmi_t1_dec@2:
	mov	r10d, 8
$LN28@bmi_t1_dec@2:
	add	ebp, r11d
$LN32@bmi_t1_dec@2:
	add	r12d, r12d
	add	ebp, ebp
	dec	r10d
	cmp	r12d, 8388608				; 00800000H
	jl	SHORT $LL35@bmi_t1_dec@2
$LN33@bmi_t1_dec@2:
; Line 418
	mov	eax, 1
	sub	eax, ebx
	mov	ebx, DWORD PTR p$[rsp]
	mov	ecx, ebx
	shl	eax, cl
; Line 420
	mov	rcx, QWORD PTR $T3639[rsp]
	xor	eax, edi
	or	eax, DWORD PTR half_lsb$1$[rsp]
	mov	DWORD PTR [rsi+rcx*4], eax
$LN54@bmi_t1_dec@2:
; Line 422
	mov	eax, r14d
	and	eax, 536879104				; 20002000H
	cmp	eax, 536879104				; 20002000H
	jne	$LN155@bmi_t1_dec@2
; Line 425
	mov	rax, QWORD PTR $T3638[rsp]
; Line 427
	mov	r8, QWORD PTR states$[rsp]
	mov	ecx, ebx
	mov	edi, DWORD PTR [rsi+rax*4]
	mov	rdx, r8
	mov	eax, edi
	btr	eax, 31
	sar	eax, cl
; Line 428
	cmp	eax, 4
	jge	SHORT $LN26@bmi_t1_dec@2
; Line 430
	test	r14d, 253440				; 0003de00H
	je	SHORT $LN24@bmi_t1_dec@2
; Line 432
	lea	rdx, QWORD PTR [r8+16]
; Line 435
	jmp	SHORT $LN24@bmi_t1_dec@2
$LN26@bmi_t1_dec@2:
; Line 437
	lea	rdx, QWORD PTR [r8+32]
$LN24@bmi_t1_dec@2:
; Line 439
	mov	r8d, DWORD PTR [rdx]
	mov	ebx, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	r12d, r8d
	and	ebx, 1
	cmp	ebp, r8d
	jge	$LN23@bmi_t1_dec@2
	cmp	r12d, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN22@bmi_t1_dec@2
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN177@bmi_t1_dec@2
$LN22@bmi_t1_dec@2:
	mov	rax, QWORD PTR [rcx+16]
	xor	ebx, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN177@bmi_t1_dec@2:
	mov	QWORD PTR [rdx+8], rax
	mov	r12d, r8d
$LL20@bmi_t1_dec@2:
	test	r10d, r10d
	jne	SHORT $LN17@bmi_t1_dec@2
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN16@bmi_t1_dec@2
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN15@bmi_t1_dec@2
	inc	r13d
	jmp	SHORT $LN178@bmi_t1_dec@2
$LN15@bmi_t1_dec@2:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN13@bmi_t1_dec@2
$LN16@bmi_t1_dec@2:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN178@bmi_t1_dec@2:
	mov	r10d, 8
$LN13@bmi_t1_dec@2:
	add	ebp, r11d
$LN17@bmi_t1_dec@2:
	add	r12d, r12d
	add	ebp, ebp
	dec	r10d
	cmp	r12d, 8388608				; 00800000H
	jl	SHORT $LL20@bmi_t1_dec@2
	jmp	$LN6@bmi_t1_dec@2
$LN23@bmi_t1_dec@2:
	sub	ebp, r8d
	cmp	r12d, 8388608				; 00800000H
	jge	SHORT $LN6@bmi_t1_dec@2
	cmp	r12d, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN10@bmi_t1_dec@2
	mov	rax, QWORD PTR [rcx+16]
	xor	ebx, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN179@bmi_t1_dec@2
$LN10@bmi_t1_dec@2:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN179@bmi_t1_dec@2:
	mov	QWORD PTR [rdx+8], rax
	npad	2
$LL8@bmi_t1_dec@2:
	test	r10d, r10d
	jne	SHORT $LN5@bmi_t1_dec@2
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN4@bmi_t1_dec@2
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN3@bmi_t1_dec@2
	inc	r13d
	jmp	SHORT $LN180@bmi_t1_dec@2
$LN3@bmi_t1_dec@2:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN1@bmi_t1_dec@2
$LN4@bmi_t1_dec@2:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN180@bmi_t1_dec@2:
	mov	r10d, 8
$LN1@bmi_t1_dec@2:
	add	ebp, r11d
$LN5@bmi_t1_dec@2:
	add	r12d, r12d
	add	ebp, ebp
	dec	r10d
	cmp	r12d, 8388608				; 00800000H
	jl	SHORT $LL8@bmi_t1_dec@2
$LN6@bmi_t1_dec@2:
; Line 440
	mov	r8d, DWORD PTR p$[rsp]
	mov	eax, 1
	sub	eax, ebx
	mov	ecx, r8d
	shl	eax, cl
; Line 442
	mov	rcx, QWORD PTR $T3638[rsp]
	xor	eax, edi
	or	eax, DWORD PTR half_lsb$1$[rsp]
	mov	DWORD PTR [rsi+rcx*4], eax
	jmp	SHORT $LN27@bmi_t1_dec@2
$LN155@bmi_t1_dec@2:
; Line 326
	mov	r8d, DWORD PTR p$[rsp]
$LN27@bmi_t1_dec@2:
; Line 445
	mov	eax, DWORD PTR c$1$[rsp]
	mov	rbx, QWORD PTR states$[rsp]
	mov	edx, DWORD PTR width$[rsp]
	dec	eax
; Line 446
	add	rsi, 4
; Line 447
	add	r15, 4
$LN164@bmi_t1_dec@2:
	mov	QWORD PTR sp$[rsp], rsi
	mov	DWORD PTR c$1$[rsp], eax
; Line 448
	test	eax, eax
	jg	$LL115@bmi_t1_dec@2
; Line 449
	mov	eax, DWORD PTR num_stripes$[rsp]
; Line 451
	add	rsi, QWORD PTR tv316[rsp]
	add	r15, 12
	dec	eax
	mov	QWORD PTR sp$[rsp], rsi
	mov	DWORD PTR num_stripes$[rsp], eax
; Line 452
	test	eax, eax
	jg	$LL118@bmi_t1_dec@2
; Line 454
	mov	rax, QWORD PTR coder$[rsp]
	mov	DWORD PTR [rax], r12d
	mov	DWORD PTR [rax+4], ebp
	mov	DWORD PTR [rax+8], r10d
	mov	DWORD PTR [rax+12], r11d
	mov	DWORD PTR [rax+16], r13d
	mov	QWORD PTR [rax+24], r9
; Line 456
	add	rsp, 40					; 00000028H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
bmi_t1_decode_pass1_asm64 ENDP
_TEXT	ENDS




PUBLIC	bmi_t1_decode_pass2_asm64

;	COMDAT bmi_t1_decode_pass2_asm64
_TEXT	SEGMENT
one_and_half$1$ = 0
$T3815 = 8
$T3814 = 16
tv181 = 24
tmpRunState$3073 = 32
coder$ = 128
states$ = 136
c$1$ = 144
p$ = 144
lut_ctx$ = 152
sp$ = 160
contextWord$ = 168
sym$ = 176
width$ = 176
num_stripes$ = 184
lut_ctx_sign$ = 192
tableBase$ = 200
tmpTransition$ = 208
bmi_t1_decode_pass2_asm64 PROC				; COMDAT
; Line 460
$LN438:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 56					; 00000038H
; Line 461
	mov	r9, QWORD PTR [rcx+24]
	mov	edi, DWORD PTR [rcx]
	mov	ebx, DWORD PTR [rcx+4]
	mov	r10d, DWORD PTR [rcx+8]
	mov	r11d, DWORD PTR [rcx+12]
	mov	ebp, DWORD PTR [rcx+16]
; Line 468
	mov	r15, QWORD PTR contextWord$[rsp]
	mov	r12d, DWORD PTR sym$[rsp]
	mov	ecx, r8d
	mov	eax, 1
	mov	rsi, rdx
	mov	edx, DWORD PTR width$[rsp]
	shl	eax, cl
	mov	ecx, eax
	sar	ecx, 1
	add	ecx, eax
	lea	eax, DWORD PTR [rdx+rdx]
	mov	DWORD PTR one_and_half$1$[rsp], ecx
	lea	ecx, DWORD PTR [rax+rdx]
	cdqe
	mov	QWORD PTR $T3815[rsp], rax
	movsxd	rax, ecx
	mov	QWORD PTR $T3814[rsp], rax
	shl	rax, 2
	mov	QWORD PTR tv181[rsp], rax
	npad	2
$LL282@bmi_t1_dec@3:
; Line 473
	mov	ecx, edx
	mov	DWORD PTR c$1$[rsp], edx
	npad	7
$LL279@bmi_t1_dec@3:
; Line 477
	or	r13d, -1
; Line 478
	cmp	DWORD PTR [r15], 0
	jne	$LN251@bmi_t1_dec@3
; Line 480
	mov	edx, DWORD PTR [rsi+144]
	mov	r12d, edx
	and	edx, -256				; ffffffffffffff00H
	sub	edi, edx
	and	r12d, 1
	cmp	ebx, edx
	jge	$LN275@bmi_t1_dec@3
	cmp	edi, edx
	mov	rcx, QWORD PTR [rsi+152]
	jge	SHORT $LN274@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rsi+144], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN393@bmi_t1_dec@3
$LN274@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rsi+144], rax
	mov	rax, QWORD PTR [rcx+24]
$LN393@bmi_t1_dec@3:
	mov	QWORD PTR [rsi+152], rax
	mov	edi, edx
$LL272@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN269@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN268@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN267@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN394@bmi_t1_dec@3
$LN267@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN265@bmi_t1_dec@3
$LN268@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN394@bmi_t1_dec@3:
	mov	r10d, 8
$LN265@bmi_t1_dec@3:
	add	ebx, r11d
$LN269@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL272@bmi_t1_dec@3
	jmp	$LN395@bmi_t1_dec@3
$LN275@bmi_t1_dec@3:
	sub	ebx, edx
	cmp	edi, 8388608				; 00800000H
	jge	$LN258@bmi_t1_dec@3
	cmp	edi, edx
	mov	rcx, QWORD PTR [rsi+152]
	jge	SHORT $LN262@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rsi+144], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN396@bmi_t1_dec@3
$LN262@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rsi+144], rax
	mov	rax, QWORD PTR [rcx+8]
$LN396@bmi_t1_dec@3:
	mov	QWORD PTR [rsi+152], rax
$LL260@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN257@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN256@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN255@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN397@bmi_t1_dec@3
$LN255@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN253@bmi_t1_dec@3
$LN256@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN397@bmi_t1_dec@3:
	mov	r10d, 8
$LN253@bmi_t1_dec@3:
	add	ebx, r11d
$LN257@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL260@bmi_t1_dec@3
$LN395@bmi_t1_dec@3:
	mov	ecx, DWORD PTR c$1$[rsp]
$LN258@bmi_t1_dec@3:
; Line 481
	test	r12d, r12d
; Line 486
	je	$LN398@bmi_t1_dec@3
; Line 492
	mov	eax, 5636352				; 00560100H
; Line 494
	xor	edx, edx
	sub	edi, eax
	cmp	ebx, eax
	mov	DWORD PTR tmpRunState$3073[rsp], eax
	jge	$LN250@bmi_t1_dec@3
	cmp	edi, eax
	mov	rcx, QWORD PTR tmpTransition$[rsp]
	lea	r8, QWORD PTR tmpRunState$3073[rsp]
	jge	SHORT $LN249@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN399@bmi_t1_dec@3
$LN249@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx+16]
	mov	edx, 1
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+24]
$LN399@bmi_t1_dec@3:
	mov	QWORD PTR [r8+8], rax
	mov	edi, 5636352				; 00560100H
	npad	5
$LL247@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN244@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN243@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN242@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN400@bmi_t1_dec@3
$LN242@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN240@bmi_t1_dec@3
$LN243@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN400@bmi_t1_dec@3:
	mov	r10d, 8
$LN240@bmi_t1_dec@3:
	add	ebx, r11d
$LN244@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL247@bmi_t1_dec@3
	jmp	$LN401@bmi_t1_dec@3
$LN250@bmi_t1_dec@3:
	sub	ebx, eax
	cmp	edi, 8388608				; 00800000H
	jge	$LN233@bmi_t1_dec@3
	cmp	edi, eax
	mov	rcx, QWORD PTR tmpTransition$[rsp]
	lea	r8, QWORD PTR tmpRunState$3073[rsp]
	jge	SHORT $LN237@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx+16]
	mov	edx, 1
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN402@bmi_t1_dec@3
$LN237@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rcx+8]
$LN402@bmi_t1_dec@3:
	mov	QWORD PTR [r8+8], rax
	npad	1
$LL235@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN232@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN231@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN230@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN403@bmi_t1_dec@3
$LN230@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN228@bmi_t1_dec@3
$LN231@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN403@bmi_t1_dec@3:
	mov	r10d, 8
$LN228@bmi_t1_dec@3:
	add	ebx, r11d
$LN232@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL235@bmi_t1_dec@3
$LN401@bmi_t1_dec@3:
	mov	eax, DWORD PTR tmpRunState$3073[rsp]
$LN233@bmi_t1_dec@3:
; Line 495
	mov	ecx, eax
	and	eax, -256				; ffffffffffffff00H
	sub	edi, eax
	and	ecx, 1
	cmp	ebx, eax
	jge	SHORT $LN227@bmi_t1_dec@3
	cmp	edi, eax
	jl	SHORT $LN225@bmi_t1_dec@3
	xor	ecx, 1
$LN225@bmi_t1_dec@3:
	mov	edi, eax
$LL224@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN221@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN220@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN219@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN404@bmi_t1_dec@3
$LN219@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN217@bmi_t1_dec@3
$LN220@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN404@bmi_t1_dec@3:
	mov	r10d, 8
$LN217@bmi_t1_dec@3:
	add	ebx, r11d
$LN221@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL224@bmi_t1_dec@3
	jmp	SHORT $LN210@bmi_t1_dec@3
$LN227@bmi_t1_dec@3:
	sub	ebx, eax
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN210@bmi_t1_dec@3
	cmp	edi, eax
	jge	SHORT $LL212@bmi_t1_dec@3
	xor	ecx, 1
$LL212@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN209@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN208@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN207@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN405@bmi_t1_dec@3
$LN207@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN205@bmi_t1_dec@3
$LN208@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN405@bmi_t1_dec@3:
	mov	r10d, 8
$LN205@bmi_t1_dec@3:
	add	ebx, r11d
$LN209@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL212@bmi_t1_dec@3
$LN210@bmi_t1_dec@3:
; Line 496
	lea	r13d, DWORD PTR [rcx+rdx*2]
; Line 497
	xor	r12d, r12d
$LN251@bmi_t1_dec@3:
; Line 500
	mov	r14d, DWORD PTR [r15]
; Line 501
	test	r14d, 2621456				; 00280010H
	je	SHORT $LN203@bmi_t1_dec@3
	test	r13d, r13d
	jne	$LN178@bmi_t1_dec@3
$LN203@bmi_t1_dec@3:
; Line 504
	cmp	r13d, -1
	jne	$LN184@bmi_t1_dec@3
; Line 506
	mov	rcx, QWORD PTR lut_ctx$[rsp]
	mov	eax, r14d
	and	eax, 495				; 000001efH
	movzx	edx, BYTE PTR [rax+rcx]
	shl	rdx, 4
	add	rdx, rsi
; Line 507
	mov	r8d, DWORD PTR [rdx]
	mov	r12d, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	r12d, 1
	cmp	ebx, r8d
	jge	SHORT $LN201@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN200@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN406@bmi_t1_dec@3
$LN200@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN406@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
$LL198@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN195@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN194@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN193@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN407@bmi_t1_dec@3
$LN193@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN191@bmi_t1_dec@3
$LN194@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN407@bmi_t1_dec@3:
	mov	r10d, 8
$LN191@bmi_t1_dec@3:
	add	ebx, r11d
$LN195@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL198@bmi_t1_dec@3
	jmp	SHORT $LN184@bmi_t1_dec@3
$LN201@bmi_t1_dec@3:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN184@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN188@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN408@bmi_t1_dec@3
$LN188@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN408@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
$LL186@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN183@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN182@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN181@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN409@bmi_t1_dec@3
$LN181@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN179@bmi_t1_dec@3
$LN182@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN409@bmi_t1_dec@3:
	mov	r10d, 8
$LN179@bmi_t1_dec@3:
	add	ebx, r11d
$LN183@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL186@bmi_t1_dec@3
$LN184@bmi_t1_dec@3:
; Line 509
	test	r12d, r12d
	jne	SHORT $LN177@bmi_t1_dec@3
	test	r13d, r13d
	jne	$LN178@bmi_t1_dec@3
$LN177@bmi_t1_dec@3:
; Line 523
	mov	eax, DWORD PTR [r15-4]
	mov	ecx, r14d
	or	r13d, -1
	sar	ecx, 1
	and	eax, 524304				; 00080010H
	and	ecx, 131072				; 00020000H
	or	ecx, eax
	mov	eax, DWORD PTR [r15+4]
	and	eax, 524304				; 00080010H
	sar	ecx, 1
	add	eax, eax
	or	ecx, eax
	mov	eax, r14d
	and	eax, 4194434				; 00400082H
	or	eax, ecx
	cdqe
; Line 527
	mov	rcx, rax
	sar	rcx, 14
	or	rcx, rax
	sar	rcx, 1
	movzx	eax, cl
	mov	rcx, QWORD PTR lut_ctx_sign$[rsp]
	movzx	esi, BYTE PTR [rax+rcx]
; Line 528
	mov	rdx, rsi
	sar	rdx, 1
	add	rdx, 10
	shl	rdx, 4
	add	rdx, QWORD PTR states$[rsp]
; Line 529
	mov	r8d, DWORD PTR [rdx]
	mov	r12d, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	r12d, 1
	cmp	ebx, r8d
	jge	SHORT $LN176@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN175@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN410@bmi_t1_dec@3
$LN175@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN410@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
	npad	6
$LL173@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN170@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN169@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN168@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN411@bmi_t1_dec@3
$LN168@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN166@bmi_t1_dec@3
$LN169@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN411@bmi_t1_dec@3:
	mov	r10d, 8
$LN166@bmi_t1_dec@3:
	add	ebx, r11d
$LN170@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL173@bmi_t1_dec@3
	jmp	SHORT $LN159@bmi_t1_dec@3
$LN176@bmi_t1_dec@3:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN159@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN163@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN412@bmi_t1_dec@3
$LN163@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN412@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
$LL161@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN158@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN157@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN156@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN413@bmi_t1_dec@3
$LN156@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN154@bmi_t1_dec@3
$LN157@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN413@bmi_t1_dec@3:
	mov	r10d, 8
$LN154@bmi_t1_dec@3:
	add	ebx, r11d
$LN158@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL161@bmi_t1_dec@3
$LN159@bmi_t1_dec@3:
; Line 536
	movsxd	rdx, DWORD PTR width$[rsp]
	and	esi, 1
	mov	rcx, r15
	xor	r12d, esi
	mov	rsi, QWORD PTR states$[rsp]
	lea	rax, QWORD PTR [rdx*4+16]
	sub	rcx, rax
; Line 537
	lea	rax, QWORD PTR [rdx*4+12]
	or	DWORD PTR [rcx], 131072			; 00020000H
	mov	rcx, r15
	sub	rcx, rax
	mov	eax, r12d
	shl	eax, 31
	bts	eax, 16
	or	DWORD PTR [rcx], eax
; Line 538
	lea	rax, QWORD PTR [rdx*4+8]
	mov	rcx, r15
	sub	rcx, rax
; Line 542
	mov	eax, r12d
	or	DWORD PTR [rcx], 32768			; 00008000H
	or	DWORD PTR [r15-4], 32			; 00000020H
	or	DWORD PTR [r15+4], 8
; Line 543
	mov	rcx, QWORD PTR sp$[rsp]
	shl	eax, 19
	or	eax, 16
	or	r14d, eax
	mov	eax, r12d
	neg	eax
	shl	eax, 31
	add	eax, DWORD PTR one_and_half$1$[rsp]
	mov	DWORD PTR [rcx], eax
$LN178@bmi_t1_dec@3:
; Line 546
	test	r14d, 20971648				; 01400080H
	je	SHORT $LN152@bmi_t1_dec@3
	cmp	r13d, 1
	jne	$LN127@bmi_t1_dec@3
$LN152@bmi_t1_dec@3:
; Line 549
	cmp	r13d, -1
	jne	$LN133@bmi_t1_dec@3
; Line 551
	mov	rcx, QWORD PTR lut_ctx$[rsp]
	mov	eax, r14d
	sar	rax, 3
	and	eax, 495				; 000001efH
	movzx	edx, BYTE PTR [rax+rcx]
	shl	rdx, 4
	add	rdx, rsi
; Line 552
	mov	r8d, DWORD PTR [rdx]
	mov	r12d, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	r12d, 1
	cmp	ebx, r8d
	jge	SHORT $LN150@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN149@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN414@bmi_t1_dec@3
$LN149@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN414@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
	npad	2
$LL147@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN144@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN143@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN142@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN415@bmi_t1_dec@3
$LN142@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN140@bmi_t1_dec@3
$LN143@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN415@bmi_t1_dec@3:
	mov	r10d, 8
$LN140@bmi_t1_dec@3:
	add	ebx, r11d
$LN144@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL147@bmi_t1_dec@3
	jmp	SHORT $LN133@bmi_t1_dec@3
$LN150@bmi_t1_dec@3:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN133@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN137@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN416@bmi_t1_dec@3
$LN137@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN416@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
$LL135@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN132@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN131@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN130@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN417@bmi_t1_dec@3
$LN130@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN128@bmi_t1_dec@3
$LN131@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN417@bmi_t1_dec@3:
	mov	r10d, 8
$LN128@bmi_t1_dec@3:
	add	ebx, r11d
$LN132@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL135@bmi_t1_dec@3
$LN133@bmi_t1_dec@3:
; Line 555
	test	r12d, r12d
	jne	SHORT $LN126@bmi_t1_dec@3
	cmp	r13d, 1
	jne	$LN127@bmi_t1_dec@3
$LN126@bmi_t1_dec@3:
; Line 566
	mov	ecx, DWORD PTR [r15-4]
	mov	eax, DWORD PTR [r15+4]
	or	r13d, -1
	sar	ecx, 1
	and	eax, 4194432				; 00400080H
	and	ecx, 2097216				; 00200040H
	add	eax, eax
	or	ecx, eax
	mov	eax, r14d
	and	eax, 34079760				; 02080410H
	or	eax, ecx
	cdqe
; Line 569
	mov	rcx, rax
	sar	rcx, 14
	or	rcx, rax
	sar	rcx, 4
	movzx	eax, cl
	mov	rcx, QWORD PTR lut_ctx_sign$[rsp]
	movzx	esi, BYTE PTR [rax+rcx]
; Line 570
	mov	rdx, rsi
	sar	rdx, 1
	add	rdx, 10
	shl	rdx, 4
	add	rdx, QWORD PTR states$[rsp]
; Line 571
	mov	r8d, DWORD PTR [rdx]
	mov	r12d, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	r12d, 1
	cmp	ebx, r8d
	jge	SHORT $LN125@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN124@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN418@bmi_t1_dec@3
$LN124@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN418@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
	npad	6
$LL122@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN119@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN118@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN117@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN419@bmi_t1_dec@3
$LN117@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN115@bmi_t1_dec@3
$LN118@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN419@bmi_t1_dec@3:
	mov	r10d, 8
$LN115@bmi_t1_dec@3:
	add	ebx, r11d
$LN119@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL122@bmi_t1_dec@3
	jmp	SHORT $LN108@bmi_t1_dec@3
$LN125@bmi_t1_dec@3:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN108@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN112@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN420@bmi_t1_dec@3
$LN112@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN420@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
$LL110@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN107@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN106@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN105@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN421@bmi_t1_dec@3
$LN105@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN103@bmi_t1_dec@3
$LN106@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN421@bmi_t1_dec@3:
	mov	r10d, 8
$LN103@bmi_t1_dec@3:
	add	ebx, r11d
$LN107@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL110@bmi_t1_dec@3
$LN108@bmi_t1_dec@3:
; Line 575
	or	DWORD PTR [r15-4], 256			; 00000100H
; Line 576
	or	DWORD PTR [r15+4], 64			; 00000040H
; Line 579
	mov	rdx, QWORD PTR sp$[rsp]
	and	esi, 1
	xor	r12d, esi
	mov	eax, r12d
	mov	ecx, r12d
	shl	eax, 22
	neg	ecx
	bts	eax, 7
	shl	ecx, 31
	or	r14d, eax
	movsxd	rax, DWORD PTR width$[rsp]
	add	ecx, DWORD PTR one_and_half$1$[rsp]
	mov	DWORD PTR [rdx+rax*4], ecx
$LN127@bmi_t1_dec@3:
; Line 583
	test	r14d, 167773184				; 0a000400H
	je	SHORT $LN101@bmi_t1_dec@3
	cmp	r13d, 2
	jne	$LN76@bmi_t1_dec@3
$LN101@bmi_t1_dec@3:
; Line 585
	cmp	r13d, -1
	jne	$LN82@bmi_t1_dec@3
; Line 587
	mov	rcx, QWORD PTR lut_ctx$[rsp]
	mov	eax, r14d
	sar	rax, 6
	and	eax, 495				; 000001efH
	movzx	edx, BYTE PTR [rax+rcx]
	shl	rdx, 4
	add	rdx, QWORD PTR states$[rsp]
; Line 588
	mov	r8d, DWORD PTR [rdx]
	mov	r12d, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	r12d, 1
	cmp	ebx, r8d
	jge	SHORT $LN99@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN98@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN422@bmi_t1_dec@3
$LN98@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN422@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
	npad	2
$LL96@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN93@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN92@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN91@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN423@bmi_t1_dec@3
$LN91@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN89@bmi_t1_dec@3
$LN92@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN423@bmi_t1_dec@3:
	mov	r10d, 8
$LN89@bmi_t1_dec@3:
	add	ebx, r11d
$LN93@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL96@bmi_t1_dec@3
	jmp	SHORT $LN82@bmi_t1_dec@3
$LN99@bmi_t1_dec@3:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN82@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN86@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN424@bmi_t1_dec@3
$LN86@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN424@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
$LL84@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN81@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN80@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN79@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN425@bmi_t1_dec@3
$LN79@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN77@bmi_t1_dec@3
$LN80@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN425@bmi_t1_dec@3:
	mov	r10d, 8
$LN77@bmi_t1_dec@3:
	add	ebx, r11d
$LN81@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL84@bmi_t1_dec@3
$LN82@bmi_t1_dec@3:
; Line 590
	test	r12d, r12d
	jne	SHORT $LN75@bmi_t1_dec@3
	cmp	r13d, 2
	jne	$LN76@bmi_t1_dec@3
$LN75@bmi_t1_dec@3:
; Line 600
	mov	ecx, DWORD PTR [r15-4]
	mov	eax, DWORD PTR [r15+4]
	or	r13d, -1
	sar	ecx, 1
	and	eax, 33555456				; 02000400H
	and	ecx, 16777728				; 01000200H
	add	eax, eax
	or	ecx, eax
	mov	eax, r14d
	and	eax, 272638080				; 10402080H
	or	eax, ecx
	cdqe
; Line 603
	mov	rcx, rax
	sar	rcx, 14
	or	rcx, rax
	sar	rcx, 7
	movzx	eax, cl
	mov	rcx, QWORD PTR lut_ctx_sign$[rsp]
	movzx	esi, BYTE PTR [rax+rcx]
; Line 604
	mov	rdx, rsi
	sar	rdx, 1
	add	rdx, 10
	shl	rdx, 4
	add	rdx, QWORD PTR states$[rsp]
; Line 605
	mov	r8d, DWORD PTR [rdx]
	mov	r12d, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	r12d, 1
	cmp	ebx, r8d
	jge	SHORT $LN74@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN73@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN426@bmi_t1_dec@3
$LN73@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN426@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
	npad	6
$LL71@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN68@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN67@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN66@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN427@bmi_t1_dec@3
$LN66@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN64@bmi_t1_dec@3
$LN67@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN427@bmi_t1_dec@3:
	mov	r10d, 8
$LN64@bmi_t1_dec@3:
	add	ebx, r11d
$LN68@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL71@bmi_t1_dec@3
	jmp	SHORT $LN57@bmi_t1_dec@3
$LN74@bmi_t1_dec@3:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN57@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN61@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN428@bmi_t1_dec@3
$LN61@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN428@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
$LL59@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN56@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN55@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN54@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN429@bmi_t1_dec@3
$LN54@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN52@bmi_t1_dec@3
$LN55@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN429@bmi_t1_dec@3:
	mov	r10d, 8
$LN52@bmi_t1_dec@3:
	add	ebx, r11d
$LN56@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL59@bmi_t1_dec@3
$LN57@bmi_t1_dec@3:
; Line 609
	or	DWORD PTR [r15-4], 2048			; 00000800H
; Line 610
	or	DWORD PTR [r15+4], 512			; 00000200H
; Line 613
	mov	rcx, QWORD PTR sp$[rsp]
	mov	rdx, QWORD PTR $T3815[rsp]
	and	esi, 1
	xor	r12d, esi
	mov	eax, r12d
	shl	eax, 25
	bts	eax, 10
	or	r14d, eax
	mov	eax, r12d
	neg	eax
	shl	eax, 31
	add	eax, DWORD PTR one_and_half$1$[rsp]
	mov	DWORD PTR [rcx+rdx*4], eax
$LN76@bmi_t1_dec@3:
; Line 616
	test	r14d, 1342185472			; 50002000H
	je	SHORT $LN50@bmi_t1_dec@3
	cmp	r13d, 3
	jne	$LN25@bmi_t1_dec@3
$LN50@bmi_t1_dec@3:
; Line 619
	cmp	r13d, -1
	jne	$LN31@bmi_t1_dec@3
; Line 621
	mov	rcx, QWORD PTR lut_ctx$[rsp]
	mov	eax, r14d
	sar	rax, 9
	and	eax, 495				; 000001efH
	movzx	edx, BYTE PTR [rax+rcx]
	shl	rdx, 4
	add	rdx, QWORD PTR states$[rsp]
; Line 622
	mov	r8d, DWORD PTR [rdx]
	mov	r12d, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	r12d, 1
	cmp	ebx, r8d
	jge	SHORT $LN48@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN47@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN430@bmi_t1_dec@3
$LN47@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN430@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
	npad	2
$LL45@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN42@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN41@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN40@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN431@bmi_t1_dec@3
$LN40@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN38@bmi_t1_dec@3
$LN41@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN431@bmi_t1_dec@3:
	mov	r10d, 8
$LN38@bmi_t1_dec@3:
	add	ebx, r11d
$LN42@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL45@bmi_t1_dec@3
	jmp	SHORT $LN31@bmi_t1_dec@3
$LN48@bmi_t1_dec@3:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN31@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN35@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN432@bmi_t1_dec@3
$LN35@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN432@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
$LL33@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN30@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN29@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN28@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN433@bmi_t1_dec@3
$LN28@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN26@bmi_t1_dec@3
$LN29@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN433@bmi_t1_dec@3:
	mov	r10d, 8
$LN26@bmi_t1_dec@3:
	add	ebx, r11d
$LN30@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL33@bmi_t1_dec@3
$LN31@bmi_t1_dec@3:
; Line 624
	test	r12d, r12d
	jne	SHORT $LN24@bmi_t1_dec@3
	cmp	r13d, 3
	jne	$LN25@bmi_t1_dec@3
$LN24@bmi_t1_dec@3:
; Line 633
	mov	ecx, DWORD PTR [r15-4]
	mov	eax, DWORD PTR [r15+4]
	sar	ecx, 1
	and	eax, 268443648				; 10002000H
	and	ecx, 134221824				; 08001000H
	add	eax, eax
	or	ecx, eax
	mov	eax, r14d
	and	eax, -2113862656			; ffffffff82010400H
	or	eax, ecx
	cdqe
; Line 638
	mov	rcx, rax
	sar	rcx, 14
	or	rcx, rax
	sar	rcx, 10
	movzx	eax, cl
	mov	rcx, QWORD PTR lut_ctx_sign$[rsp]
	movzx	esi, BYTE PTR [rax+rcx]
; Line 639
	mov	rdx, rsi
	sar	rdx, 1
	add	rdx, 10
	shl	rdx, 4
	add	rdx, QWORD PTR states$[rsp]
; Line 640
	mov	r8d, DWORD PTR [rdx]
	mov	r12d, r8d
	and	r8d, -256				; ffffffffffffff00H
	sub	edi, r8d
	and	r12d, 1
	cmp	ebx, r8d
	jge	SHORT $LN23@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN22@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	jmp	SHORT $LN434@bmi_t1_dec@3
$LN22@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
$LN434@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
	mov	edi, r8d
$LL20@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN17@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN16@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN15@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN435@bmi_t1_dec@3
$LN15@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN13@bmi_t1_dec@3
$LN16@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN435@bmi_t1_dec@3:
	mov	r10d, 8
$LN13@bmi_t1_dec@3:
	add	ebx, r11d
$LN17@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL20@bmi_t1_dec@3
	jmp	SHORT $LN6@bmi_t1_dec@3
$LN23@bmi_t1_dec@3:
	sub	ebx, r8d
	cmp	edi, 8388608				; 00800000H
	jge	SHORT $LN6@bmi_t1_dec@3
	cmp	edi, r8d
	mov	rcx, QWORD PTR [rdx+8]
	jge	SHORT $LN10@bmi_t1_dec@3
	mov	rax, QWORD PTR [rcx+16]
	xor	r12d, 1
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+24]
	jmp	SHORT $LN436@bmi_t1_dec@3
$LN10@bmi_t1_dec@3:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
$LN436@bmi_t1_dec@3:
	mov	QWORD PTR [rdx+8], rax
$LL8@bmi_t1_dec@3:
	test	r10d, r10d
	jne	SHORT $LN5@bmi_t1_dec@3
	cmp	r11d, 255				; 000000ffH
	jne	SHORT $LN4@bmi_t1_dec@3
	movzx	eax, BYTE PTR [r9]
	cmp	al, 143					; 0000008fH
	jbe	SHORT $LN3@bmi_t1_dec@3
	inc	ebp
	jmp	SHORT $LN437@bmi_t1_dec@3
$LN3@bmi_t1_dec@3:
	movzx	r11d, al
	mov	r10d, 7
	add	r11d, r11d
	inc	r9
	jmp	SHORT $LN1@bmi_t1_dec@3
$LN4@bmi_t1_dec@3:
	movzx	r11d, BYTE PTR [r9]
	inc	r9
$LN437@bmi_t1_dec@3:
	mov	r10d, 8
$LN1@bmi_t1_dec@3:
	add	ebx, r11d
$LN5@bmi_t1_dec@3:
	add	edi, edi
	add	ebx, ebx
	dec	r10d
	cmp	edi, 8388608				; 00800000H
	jl	SHORT $LL8@bmi_t1_dec@3
$LN6@bmi_t1_dec@3:
; Line 644
	movsxd	rcx, DWORD PTR width$[rsp]
; Line 651
	mov	rdx, QWORD PTR $T3814[rsp]
	and	esi, 1
	or	DWORD PTR [r15+rcx*4+8], 4
	or	DWORD PTR [r15+rcx*4+16], 1
	xor	r12d, esi
	mov	eax, r12d
	shl	eax, 18
	or	eax, 2
	or	DWORD PTR [r15+rcx*4+12], eax
	or	DWORD PTR [r15-4], 16384		; 00004000H
	or	DWORD PTR [r15+4], 4096			; 00001000H
	mov	rcx, QWORD PTR sp$[rsp]
	mov	eax, r12d
	shl	eax, 28
	bts	eax, 13
	or	r14d, eax
	mov	eax, r12d
	neg	eax
	shl	eax, 31
	add	eax, DWORD PTR one_and_half$1$[rsp]
	mov	DWORD PTR [rcx+rdx*4], eax
$LN25@bmi_t1_dec@3:
; Line 659
	mov	ecx, DWORD PTR c$1$[rsp]
	mov	rsi, QWORD PTR states$[rsp]
	mov	eax, r14d
	and	eax, 9360				; 00002490H
	shl	eax, 16
	or	eax, r14d
	and	eax, -1226833921			; ffffffffb6dfffffH
	mov	DWORD PTR [r15], eax
$LN398@bmi_t1_dec@3:
; Line 660
	mov	rax, QWORD PTR sp$[rsp]
	dec	ecx
; Line 661
	add	r15, 4
	add	rax, 4
	mov	DWORD PTR c$1$[rsp], ecx
	mov	QWORD PTR sp$[rsp], rax
; Line 663
	test	ecx, ecx
	jg	$LL279@bmi_t1_dec@3
; Line 664
	mov	ecx, DWORD PTR num_stripes$[rsp]
; Line 666
	add	rax, QWORD PTR tv181[rsp]
; Line 667
	mov	edx, DWORD PTR width$[rsp]
	dec	ecx
	add	r15, 12
	mov	QWORD PTR sp$[rsp], rax
	mov	DWORD PTR num_stripes$[rsp], ecx
	test	ecx, ecx
	jg	$LL282@bmi_t1_dec@3
; Line 669
	mov	rax, QWORD PTR coder$[rsp]
	mov	DWORD PTR [rax], edi
	mov	DWORD PTR [rax+4], ebx
	mov	DWORD PTR [rax+8], r10d
	mov	DWORD PTR [rax+12], r11d
	mov	DWORD PTR [rax+16], ebp
	mov	QWORD PTR [rax+24], r9
; Line 670
	add	rsp, 56					; 00000038H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
bmi_t1_decode_pass2_asm64 ENDP
_TEXT	ENDS
END
